{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/nanang/neo4J/tuas/web-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/nanang/neo4J/tuas/web-react/src/components/sna/user/TwitterInfluencer.js\",\n    _templateObject,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { FlexRow, FlexCol, Item } from '@mui-treasury/component-flex';\nimport Divider from '@material-ui/core/Divider';\nimport Link from '@material-ui/core/Link';\nimport InfluencerItem from '../InfluencerItem';\nimport { useQuery, gql } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_USER_INFLUENCER = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  {\\n    getUserRank {\\n      id\\n      username\\n      screen_name\\n      name\\n      score\\n      profile_image_url\\n      followers_count\\n      following_count\\n      user_id\\n    }\\n  }\\n\"])));\nexport default function TwitterInfluencer() {\n  _s();\n\n  const userInfluencer = useQuery(GET_USER_INFLUENCER);\n  const error = userInfluencer.error;\n  const loading = userInfluencer.loading;\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 21\n  }, this);\n  if (loading) return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(FlexCol, {\n    borderRadius: 2,\n    sx: {\n      bgcolor: 'rgb(244, 247, 250)',\n      boxShadow: '0 8px 16px 0 #BDC9D7'\n    },\n    children: [/*#__PURE__*/_jsxDEV(FlexRow, {\n      alignItems: \"baseline\",\n      p: 2,\n      sx: {\n        bgcolor: '#fff'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Item, {\n        grow: true,\n        mr: 1,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Most Influencer Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Item, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          href: \"#\",\n          children: \"Refresh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), \" \\u2022 \", /*#__PURE__*/_jsxDEV(Link, {\n          href: \"#\",\n          children: \"See all\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 43\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), userInfluencer.data.getUserRank.map((user, index) => /*#__PURE__*/_jsxDEV(InfluencerItem, {\n      src: user.profile_image_url,\n      name: user.screen_name,\n      count: user.score ? user.score.toLocaleString(undefined, {\n        maximumFractionDigits: 2\n      }) : '0',\n      desc: \"Rank\",\n      user: user\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TwitterInfluencer, \"GoMVnGuqojs23eFfTakVIF2g2Ls=\", false, function () {\n  return [useQuery];\n});\n\n_c = TwitterInfluencer;\n\nvar _c;\n\n$RefreshReg$(_c, \"TwitterInfluencer\");","map":{"version":3,"sources":["/Users/nanang/neo4J/tuas/web-react/src/components/sna/user/TwitterInfluencer.js"],"names":["React","Typography","FlexRow","FlexCol","Item","Divider","Link","InfluencerItem","useQuery","gql","CircularProgress","GET_USER_INFLUENCER","TwitterInfluencer","userInfluencer","error","loading","bgcolor","boxShadow","data","getUserRank","map","user","index","profile_image_url","screen_name","score","toLocaleString","undefined","maximumFractionDigits"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,SAASC,OAAT,EAAkBC,OAAlB,EAA2BC,IAA3B,QAAuC,8BAAvC;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AAEA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;;AAEA,MAAMC,mBAAmB,GAAGF,GAAH,uQAAzB;AAgBA,eAAe,SAASG,iBAAT,GAA6B;AAAA;;AAC1C,QAAMC,cAAc,GAAGL,QAAQ,CAACG,mBAAD,CAA/B;AAEA,QAAMG,KAAK,GAAGD,cAAc,CAACC,KAA7B;AACA,QAAMC,OAAO,GAAGF,cAAc,CAACE,OAA/B;AAEA,MAAID,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,MAAIC,OAAJ,EAAa,oBAAO,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AAEb,sBACE,QAAC,OAAD;AACE,IAAA,YAAY,EAAE,CADhB;AAEE,IAAA,EAAE,EAAE;AACFC,MAAAA,OAAO,EAAE,oBADP;AAEFC,MAAAA,SAAS,EAAE;AAFT,KAFN;AAAA,4BAOE,QAAC,OAAD;AACE,MAAA,UAAU,EAAC,UADb;AAEE,MAAA,CAAC,EAAE,CAFL;AAGE,MAAA,EAAE,EAAE;AACFD,QAAAA,OAAO,EAAE;AADP,OAHN;AAAA,8BAOE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF,eAYE,QAAC,IAAD;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,2BACkC,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADlC;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAuBE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAvBF,EAwBGH,cAAc,CAACK,IAAf,CAAoBC,WAApB,CAAgCC,GAAhC,CAAoC,CAACC,IAAD,EAAOC,KAAP,kBACnC,QAAC,cAAD;AACE,MAAA,GAAG,EAAED,IAAI,CAACE,iBADZ;AAEE,MAAA,IAAI,EAAEF,IAAI,CAACG,WAFb;AAGE,MAAA,KAAK,EACHH,IAAI,CAACI,KAAL,GACIJ,IAAI,CAACI,KAAL,CAAWC,cAAX,CAA0BC,SAA1B,EAAqC;AACnCC,QAAAA,qBAAqB,EAAE;AADY,OAArC,CADJ,GAII,GARR;AAUE,MAAA,IAAI,EAAC,MAVP;AAWE,MAAA,IAAI,EAAEP;AAXR,OAYOC,KAZP;AAAA;AAAA;AAAA;AAAA,YADD,CAxBH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD;;GApDuBV,iB;UACCJ,Q;;;KADDI,iB","sourcesContent":["import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport { FlexRow, FlexCol, Item } from '@mui-treasury/component-flex'\nimport Divider from '@material-ui/core/Divider'\nimport Link from '@material-ui/core/Link'\nimport InfluencerItem from '../InfluencerItem'\n\nimport { useQuery, gql } from '@apollo/client'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nconst GET_USER_INFLUENCER = gql`\n  {\n    getUserRank {\n      id\n      username\n      screen_name\n      name\n      score\n      profile_image_url\n      followers_count\n      following_count\n      user_id\n    }\n  }\n`\n\nexport default function TwitterInfluencer() {\n  const userInfluencer = useQuery(GET_USER_INFLUENCER)\n\n  const error = userInfluencer.error\n  const loading = userInfluencer.loading\n\n  if (error) return <p>Error</p>\n  if (loading) return <CircularProgress />\n\n  return (\n    <FlexCol\n      borderRadius={2}\n      sx={{\n        bgcolor: 'rgb(244, 247, 250)',\n        boxShadow: '0 8px 16px 0 #BDC9D7',\n      }}\n    >\n      <FlexRow\n        alignItems=\"baseline\"\n        p={2}\n        sx={{\n          bgcolor: '#fff',\n        }}\n      >\n        <Item grow mr={1}>\n          <Typography variant=\"h6\">\n            <b>Most Influencer Users</b>\n          </Typography>\n        </Item>\n        <Item>\n          <Link href=\"#\">Refresh</Link> â€¢ <Link href=\"#\">See all</Link>\n        </Item>\n      </FlexRow>\n      <Divider />\n      {userInfluencer.data.getUserRank.map((user, index) => (\n        <InfluencerItem\n          src={user.profile_image_url}\n          name={user.screen_name}\n          count={\n            user.score\n              ? user.score.toLocaleString(undefined, {\n                  maximumFractionDigits: 2,\n                })\n              : '0'\n          }\n          desc=\"Rank\"\n          user={user}\n          key={index}\n        />\n      ))}\n    </FlexCol>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}