{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nrequire(\"../sigma/layout.forceLink\");\n\nvar _tools = require(\"./tools\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n\nForceLink component, starts Force Atlas2 algorythm once component is mounted,\nit is advanced version of ForceAtlas2 plugin, but it is not included in the main\ndistribution script react-sigma.min.js , rather should be imported explicitly:\n\n```\nimport ForceLink from 'react-sigma/lib/ForceLink'\n```\n\nIt accepts all the parameters of ForceLink described on its github page:\n@param {boolean} barnesHutOptimize  Use the algorithm's Barnes-Hut to improve repulsion's scalability\n                  This is useful for large graph but harmful to small ones.\n@param {number} barnesHutTheta\n@param {boolean} adjustSizes\n@param {number} iterationsPerRender\n@param {boolean} [linLogMode=true]\n@param {boolean} outboundAttractionDistribution\n@param {number} edgeWeightInfluence\n@param {number} scalingRatio\n@param {boolean} strongGravityMode\n@param {number} gravity\n@param {boolean} alignNodeSiblings\n@param {number} nodeSiblingsScale\n@param {number} nodeSiblingsAngleMin\n@param {boolean} [worker=true]  Use a web worker to run calculations in separate thread\n@param {boolean} background\n@param {Sigma$Easing} easing  Easing mode\n@param {\"globally\"|\"locally\"} randomize  Randomize node positions before start\n@param {number} slowDown\n@param {number} timeout   how long algorythm should run. default=graph.nodes().length * 10\n\n[see sigma plugin page for more details](https://github.com/Linkurious/linkurious.js/tree/develop/plugins/sigma.layouts.forceLink)\n\n@example\nimport ForceLink from 'react-sigma/lib/ForceLink'\n...\n<Sigma>\n  <LoadJSON path=\"/public/graph.json\">\n    <RelativeSize initialSize={8}/>\n    <ForceLink background easing=\"cubicInOut\"/>\n  </LoadJSON>\n</Sigma>\n\n**/\n\n\nclass ForceLink extends _react.default.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      running: true\n    });\n\n    _defineProperty(this, \"render\", () => {\n      if (this.state.running) return null;\n      return /*#__PURE__*/_react.default.createElement(\"div\", null, (0, _tools.embedProps)(this.props.children, {\n        sigma: this.props.sigma\n      }));\n    });\n  }\n\n  componentDidMount() {\n    this._refreshGraph();\n  } // Change sigma status only after react rendering complete\n\n\n  componentDidUpdate(prevProps, prevState) {\n    let s = this.props.sigma;\n\n    if (prevState.running && !this.state.running && s) {\n      this._stopForceLink();\n\n      s.refresh();\n    } else if (ForceLink._propsChanged(prevProps, this.props)) {\n      this._stopForceLink();\n\n      this._refreshGraph();\n    }\n  }\n\n  componentWillUnmount() {\n    this._stopForceLink();\n  }\n\n  _stopForceLink() {\n    sigma.layouts.stopForceLink();\n    if (this.state.timer) clearTimeout(this.state.timer);\n    if (this.props.sigma && this.props.sigma.settings) this.props.sigma.settings({\n      drawEdges: this.state.drawEdges\n    });\n  }\n\n  _refreshGraph() {\n    let s = this.props.sigma;\n    if (!sigma || !s) return;\n    let drawEdges = s.settings(\"drawEdges\");\n    if (s.graph.edges().length > 1000) s.settings({\n      drawEdges: false\n    });\n    sigma.layouts.configForceLink(s, ForceLink._stripOptions(this.props));\n    sigma.layouts.startForceLink(s); // TODO: convert running status to state\n\n    let timer = setTimeout(() => {\n      this.setState({\n        running: false,\n        timer: undefined\n      });\n    }, this.props.timeout || s.graph.nodes().length * 8);\n    this.setState({\n      running: true,\n      timer,\n      drawEdges\n    });\n  } //strip force atlas options from component props\n\n\n  static _stripOptions(props) {\n    return Object.assign({}, props, {\n      children: undefined,\n      sigma: undefined\n    });\n  }\n\n  static _propsChanged(prev, next) {\n    for (let key in prev) if (prev[key] !== next[key]) return true;\n\n    return false;\n  }\n\n}\n\n_defineProperty(ForceLink, \"defaultProps\", {\n  worker: true,\n  linLogMode: true\n});\n\n_defineProperty(ForceLink, \"propTypes\", {\n  barnesHutOptimize: _propTypes.default.bool,\n  barnesHutTheta: _propTypes.default.number,\n  adjustSizes: _propTypes.default.bool,\n  iterationsPerRender: _propTypes.default.number,\n  linLogMode: _propTypes.default.bool,\n  outboundAttractionDistribution: _propTypes.default.bool,\n  edgeWeightInfluence: _propTypes.default.number,\n  scalingRatio: _propTypes.default.number,\n  strongGravityMode: _propTypes.default.bool,\n  slowDown: _propTypes.default.number,\n  gravity: _propTypes.default.number,\n  alignNodeSiblings: _propTypes.default.bool,\n  nodeSiblingsScale: _propTypes.default.number,\n  nodeSiblingsAngleMin: _propTypes.default.number,\n  worker: _propTypes.default.bool,\n  background: _propTypes.default.bool,\n  easing: function easing() {\n    return (typeof Sigma$Easing === \"function\" ? _propTypes.default.instanceOf(Sigma$Easing) : _propTypes.default.any).apply(this, arguments);\n  },\n  randomize: _propTypes.default.oneOf([\"globally\", \"locally\", \"no\"]),\n  timeout: _propTypes.default.number,\n  children: _propTypes.default.any,\n  sigma: function sigma() {\n    return (typeof Sigma === \"function\" ? _propTypes.default.instanceOf(Sigma) : _propTypes.default.any).apply(this, arguments);\n  }\n});\n\nvar _default = ForceLink;\nexports.default = _default;","map":{"version":3,"sources":["/Users/nanang/neo4J/tuas/web-react/node_modules/react-sigma/lib/ForceLink.js"],"names":["Object","defineProperty","exports","value","default","_react","_interopRequireDefault","require","_tools","_propTypes","obj","__esModule","_defineProperty","key","enumerable","configurable","writable","ForceLink","Component","constructor","args","running","state","createElement","embedProps","props","children","sigma","componentDidMount","_refreshGraph","componentDidUpdate","prevProps","prevState","s","_stopForceLink","refresh","_propsChanged","componentWillUnmount","layouts","stopForceLink","timer","clearTimeout","settings","drawEdges","graph","edges","length","configForceLink","_stripOptions","startForceLink","setTimeout","setState","undefined","timeout","nodes","assign","prev","next","worker","linLogMode","barnesHutOptimize","bool","barnesHutTheta","number","adjustSizes","iterationsPerRender","outboundAttractionDistribution","edgeWeightInfluence","scalingRatio","strongGravityMode","slowDown","gravity","alignNodeSiblings","nodeSiblingsScale","nodeSiblingsAngleMin","background","easing","Sigma$Easing","instanceOf","any","apply","arguments","randomize","oneOf","Sigma","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nrequire(\"../sigma/layout.forceLink\");\n\nvar _tools = require(\"./tools\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n\nForceLink component, starts Force Atlas2 algorythm once component is mounted,\nit is advanced version of ForceAtlas2 plugin, but it is not included in the main\ndistribution script react-sigma.min.js , rather should be imported explicitly:\n\n```\nimport ForceLink from 'react-sigma/lib/ForceLink'\n```\n\nIt accepts all the parameters of ForceLink described on its github page:\n@param {boolean} barnesHutOptimize  Use the algorithm's Barnes-Hut to improve repulsion's scalability\n                  This is useful for large graph but harmful to small ones.\n@param {number} barnesHutTheta\n@param {boolean} adjustSizes\n@param {number} iterationsPerRender\n@param {boolean} [linLogMode=true]\n@param {boolean} outboundAttractionDistribution\n@param {number} edgeWeightInfluence\n@param {number} scalingRatio\n@param {boolean} strongGravityMode\n@param {number} gravity\n@param {boolean} alignNodeSiblings\n@param {number} nodeSiblingsScale\n@param {number} nodeSiblingsAngleMin\n@param {boolean} [worker=true]  Use a web worker to run calculations in separate thread\n@param {boolean} background\n@param {Sigma$Easing} easing  Easing mode\n@param {\"globally\"|\"locally\"} randomize  Randomize node positions before start\n@param {number} slowDown\n@param {number} timeout   how long algorythm should run. default=graph.nodes().length * 10\n\n[see sigma plugin page for more details](https://github.com/Linkurious/linkurious.js/tree/develop/plugins/sigma.layouts.forceLink)\n\n@example\nimport ForceLink from 'react-sigma/lib/ForceLink'\n...\n<Sigma>\n  <LoadJSON path=\"/public/graph.json\">\n    <RelativeSize initialSize={8}/>\n    <ForceLink background easing=\"cubicInOut\"/>\n  </LoadJSON>\n</Sigma>\n\n**/\nclass ForceLink extends _react.default.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      running: true\n    });\n\n    _defineProperty(this, \"render\", () => {\n      if (this.state.running) return null;\n      return /*#__PURE__*/_react.default.createElement(\"div\", null, (0, _tools.embedProps)(this.props.children, {\n        sigma: this.props.sigma\n      }));\n    });\n  }\n\n  componentDidMount() {\n    this._refreshGraph();\n  } // Change sigma status only after react rendering complete\n\n\n  componentDidUpdate(prevProps, prevState) {\n    let s = this.props.sigma;\n\n    if (prevState.running && !this.state.running && s) {\n      this._stopForceLink();\n\n      s.refresh();\n    } else if (ForceLink._propsChanged(prevProps, this.props)) {\n      this._stopForceLink();\n\n      this._refreshGraph();\n    }\n  }\n\n  componentWillUnmount() {\n    this._stopForceLink();\n  }\n\n  _stopForceLink() {\n    sigma.layouts.stopForceLink();\n    if (this.state.timer) clearTimeout(this.state.timer);\n    if (this.props.sigma && this.props.sigma.settings) this.props.sigma.settings({\n      drawEdges: this.state.drawEdges\n    });\n  }\n\n  _refreshGraph() {\n    let s = this.props.sigma;\n    if (!sigma || !s) return;\n    let drawEdges = s.settings(\"drawEdges\");\n    if (s.graph.edges().length > 1000) s.settings({\n      drawEdges: false\n    });\n    sigma.layouts.configForceLink(s, ForceLink._stripOptions(this.props));\n    sigma.layouts.startForceLink(s); // TODO: convert running status to state\n\n    let timer = setTimeout(() => {\n      this.setState({\n        running: false,\n        timer: undefined\n      });\n    }, this.props.timeout || s.graph.nodes().length * 8);\n    this.setState({\n      running: true,\n      timer,\n      drawEdges\n    });\n  } //strip force atlas options from component props\n\n\n  static _stripOptions(props) {\n    return Object.assign({}, props, {\n      children: undefined,\n      sigma: undefined\n    });\n  }\n\n  static _propsChanged(prev, next) {\n    for (let key in prev) if (prev[key] !== next[key]) return true;\n\n    return false;\n  }\n\n}\n\n_defineProperty(ForceLink, \"defaultProps\", {\n  worker: true,\n  linLogMode: true\n});\n\n_defineProperty(ForceLink, \"propTypes\", {\n  barnesHutOptimize: _propTypes.default.bool,\n  barnesHutTheta: _propTypes.default.number,\n  adjustSizes: _propTypes.default.bool,\n  iterationsPerRender: _propTypes.default.number,\n  linLogMode: _propTypes.default.bool,\n  outboundAttractionDistribution: _propTypes.default.bool,\n  edgeWeightInfluence: _propTypes.default.number,\n  scalingRatio: _propTypes.default.number,\n  strongGravityMode: _propTypes.default.bool,\n  slowDown: _propTypes.default.number,\n  gravity: _propTypes.default.number,\n  alignNodeSiblings: _propTypes.default.bool,\n  nodeSiblingsScale: _propTypes.default.number,\n  nodeSiblingsAngleMin: _propTypes.default.number,\n  worker: _propTypes.default.bool,\n  background: _propTypes.default.bool,\n  easing: function () {\n    return (typeof Sigma$Easing === \"function\" ? _propTypes.default.instanceOf(Sigma$Easing) : _propTypes.default.any).apply(this, arguments);\n  },\n  randomize: _propTypes.default.oneOf([\"globally\", \"locally\", \"no\"]),\n  timeout: _propTypes.default.number,\n  children: _propTypes.default.any,\n  sigma: function () {\n    return (typeof Sigma === \"function\" ? _propTypes.default.instanceOf(Sigma) : _propTypes.default.any).apply(this, arguments);\n  }\n});\n\nvar _default = ForceLink;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}