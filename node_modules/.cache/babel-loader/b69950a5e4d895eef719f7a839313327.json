{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"disabled\", \"component\", \"components\", \"componentsProps\", \"label\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { getMenuItemUnstyledUtilityClass } from './menuItemUnstyledClasses';\nimport useMenuItem from './useMenuItem';\nimport composeClasses from '../composeClasses';\nimport useSlotProps from '../utils/useSlotProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction getUtilityClasses(ownerState) {\n  const disabled = ownerState.disabled,\n        focusVisible = ownerState.focusVisible;\n  const slots = {\n    root: ['root', disabled && 'disabled', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getMenuItemUnstyledUtilityClass, {});\n}\n/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base/react-menu/)\n *\n * API:\n *\n * - [MenuItemUnstyled API](https://mui.com/base/api/menu-item-unstyled/)\n */\n\n\nconst MenuItemUnstyled = /*#__PURE__*/React.forwardRef(function MenuItemUnstyled(props, ref) {\n  var _ref;\n\n  const children = props.children,\n        _props$disabled = props.disabled,\n        disabledProp = _props$disabled === void 0 ? false : _props$disabled,\n        component = props.component,\n        _props$components = props.components,\n        components = _props$components === void 0 ? {} : _props$components,\n        _props$componentsProp = props.componentsProps,\n        componentsProps = _props$componentsProp === void 0 ? {} : _props$componentsProp,\n        label = props.label,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const _useMenuItem = useMenuItem({\n    disabled: disabledProp,\n    ref,\n    label\n  }),\n        getRootProps = _useMenuItem.getRootProps,\n        disabled = _useMenuItem.disabled,\n        focusVisible = _useMenuItem.focusVisible;\n\n  const ownerState = _extends({}, props, {\n    disabled,\n    focusVisible\n  });\n\n  const classes = getUtilityClasses(ownerState);\n  const Root = (_ref = component != null ? component : components.Root) != null ? _ref : 'li';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    getSlotProps: getRootProps,\n    externalSlotProps: componentsProps.root,\n    externalForwardedProps: other,\n    className: classes.root,\n    ownerState\n  });\n  return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItemUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * @ignore\n   */\n  components: PropTypes.shape({\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * @ignore\n   */\n  componentsProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * If `true`, the menu item will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * A text representation of the menu item's content.\n   * Used for keyboard text navigation matching.\n   */\n  label: PropTypes.string\n} : void 0;\nexport default MenuItemUnstyled;","map":{"version":3,"sources":["/Users/nanang/neo4J/tuas/web-react/node_modules/@mui/base/MenuItemUnstyled/MenuItemUnstyled.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","getMenuItemUnstyledUtilityClass","useMenuItem","composeClasses","useSlotProps","jsx","_jsx","getUtilityClasses","ownerState","disabled","focusVisible","slots","root","MenuItemUnstyled","forwardRef","props","ref","_ref","children","disabledProp","component","components","componentsProps","label","other","getRootProps","classes","Root","rootProps","elementType","getSlotProps","externalSlotProps","externalForwardedProps","className","process","env","NODE_ENV","propTypes","node","shape","oneOfType","func","object","bool","string"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"disabled\", \"component\", \"components\", \"componentsProps\", \"label\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { getMenuItemUnstyledUtilityClass } from './menuItemUnstyledClasses';\nimport useMenuItem from './useMenuItem';\nimport composeClasses from '../composeClasses';\nimport useSlotProps from '../utils/useSlotProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction getUtilityClasses(ownerState) {\n  const {\n    disabled,\n    focusVisible\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getMenuItemUnstyledUtilityClass, {});\n}\n/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base/react-menu/)\n *\n * API:\n *\n * - [MenuItemUnstyled API](https://mui.com/base/api/menu-item-unstyled/)\n */\n\n\nconst MenuItemUnstyled = /*#__PURE__*/React.forwardRef(function MenuItemUnstyled(props, ref) {\n  var _ref;\n\n  const {\n    children,\n    disabled: disabledProp = false,\n    component,\n    components = {},\n    componentsProps = {},\n    label\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    getRootProps,\n    disabled,\n    focusVisible\n  } = useMenuItem({\n    disabled: disabledProp,\n    ref,\n    label\n  });\n\n  const ownerState = _extends({}, props, {\n    disabled,\n    focusVisible\n  });\n\n  const classes = getUtilityClasses(ownerState);\n  const Root = (_ref = component != null ? component : components.Root) != null ? _ref : 'li';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    getSlotProps: getRootProps,\n    externalSlotProps: componentsProps.root,\n    externalForwardedProps: other,\n    className: classes.root,\n    ownerState\n  });\n  return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItemUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * @ignore\n   */\n  components: PropTypes.shape({\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * @ignore\n   */\n  componentsProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * If `true`, the menu item will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * A text representation of the menu item's content.\n   * Used for keyboard text navigation matching.\n   */\n  label: PropTypes.string\n} : void 0;\nexport default MenuItemUnstyled;"]},"metadata":{},"sourceType":"module"}