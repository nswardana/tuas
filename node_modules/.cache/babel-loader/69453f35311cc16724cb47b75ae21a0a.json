{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"value\", \"components\", \"componentsProps\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSlotProps } from '../utils';\nimport composeClasses from '../composeClasses';\nimport { getTabPanelUnstyledUtilityClass } from './tabPanelUnstyledClasses';\nimport useTabPanel from './useTabPanel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const hidden = ownerState.hidden;\n  const slots = {\n    root: ['root', hidden && 'hidden']\n  };\n  return composeClasses(slots, getTabPanelUnstyledUtilityClass, {});\n};\n/**\n *\n * Demos:\n *\n * - [Tabs](https://mui.com/base/react-tabs/)\n *\n * API:\n *\n * - [TabPanelUnstyled API](https://mui.com/base/api/tab-panel-unstyled/)\n */\n\n\nconst TabPanelUnstyled = /*#__PURE__*/React.forwardRef(function TabPanelUnstyled(props, ref) {\n  var _ref;\n\n  const children = props.children,\n        _props$components = props.components,\n        components = _props$components === void 0 ? {} : _props$components,\n        _props$componentsProp = props.componentsProps,\n        componentsProps = _props$componentsProp === void 0 ? {} : _props$componentsProp,\n        component = props.component,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const _useTabPanel = useTabPanel(props),\n        hidden = _useTabPanel.hidden,\n        getRootProps = _useTabPanel.getRootProps;\n\n  const ownerState = _extends({}, props, {\n    hidden\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const TabPanelRoot = (_ref = component != null ? component : components.Root) != null ? _ref : 'div';\n  const tabPanelRootProps = useSlotProps({\n    elementType: TabPanelRoot,\n    getSlotProps: getRootProps,\n    externalSlotProps: componentsProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      role: 'tabpanel',\n      ref\n    },\n    ownerState,\n    className: classes.root\n  });\n  return /*#__PURE__*/_jsx(TabPanelRoot, _extends({}, tabPanelRootProps, {\n    children: !hidden && children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabPanelUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the TabPanel.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the TabPanel.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The value of the TabPanel. It will be shown when the Tab with the corresponding value is selected.\n   */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired\n} : void 0;\nexport default TabPanelUnstyled;","map":{"version":3,"sources":["/Users/nanang/neo4J/tuas/web-react/node_modules/@mui/base/TabPanelUnstyled/TabPanelUnstyled.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","useSlotProps","composeClasses","getTabPanelUnstyledUtilityClass","useTabPanel","jsx","_jsx","useUtilityClasses","ownerState","hidden","slots","root","TabPanelUnstyled","forwardRef","props","ref","_ref","children","components","componentsProps","component","other","getRootProps","classes","TabPanelRoot","Root","tabPanelRootProps","elementType","getSlotProps","externalSlotProps","externalForwardedProps","additionalProps","role","className","process","env","NODE_ENV","propTypes","node","shape","oneOfType","func","object","value","number","string","isRequired"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"value\", \"components\", \"componentsProps\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSlotProps } from '../utils';\nimport composeClasses from '../composeClasses';\nimport { getTabPanelUnstyledUtilityClass } from './tabPanelUnstyledClasses';\nimport useTabPanel from './useTabPanel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    hidden\n  } = ownerState;\n  const slots = {\n    root: ['root', hidden && 'hidden']\n  };\n  return composeClasses(slots, getTabPanelUnstyledUtilityClass, {});\n};\n/**\n *\n * Demos:\n *\n * - [Tabs](https://mui.com/base/react-tabs/)\n *\n * API:\n *\n * - [TabPanelUnstyled API](https://mui.com/base/api/tab-panel-unstyled/)\n */\n\n\nconst TabPanelUnstyled = /*#__PURE__*/React.forwardRef(function TabPanelUnstyled(props, ref) {\n  var _ref;\n\n  const {\n    children,\n    components = {},\n    componentsProps = {},\n    component\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    hidden,\n    getRootProps\n  } = useTabPanel(props);\n\n  const ownerState = _extends({}, props, {\n    hidden\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const TabPanelRoot = (_ref = component != null ? component : components.Root) != null ? _ref : 'div';\n  const tabPanelRootProps = useSlotProps({\n    elementType: TabPanelRoot,\n    getSlotProps: getRootProps,\n    externalSlotProps: componentsProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      role: 'tabpanel',\n      ref\n    },\n    ownerState,\n    className: classes.root\n  });\n  return /*#__PURE__*/_jsx(TabPanelRoot, _extends({}, tabPanelRootProps, {\n    children: !hidden && children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabPanelUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the TabPanel.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the TabPanel.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The value of the TabPanel. It will be shown when the Tab with the corresponding value is selected.\n   */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired\n} : void 0;\nexport default TabPanelUnstyled;"]},"metadata":{},"sourceType":"module"}