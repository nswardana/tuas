{"ast":null,"code":"var _jsxFileName = \"/Users/nanang/neo4J/tuas/web-react/src/components/sna/WordsNetworkSigma.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Grid, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport IconButton from '@material-ui/core/IconButton';\nimport Graph from 'graphology';\nimport { Sigma, SigmaContainer, RandomizeNodePositions, RelativeSize, ZoomControl, DragNodes, NOverlap, LoadJSON } from 'react-sigma';\nimport { ChevronLeft as ChevronLeftIcon, Menu as MenuIcon, Dashboard as DashboardIcon, Assignment as AssignmentIcon, Twitter as TwitterIcon, MoreVert as MoreVertIcon, People as PeopleIcon } from '@material-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Words() {\n  _s();\n\n  const theme = useTheme();\n  const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex'\n    },\n    paper: {\n      padding: theme.spacing(2),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column'\n    },\n    fixedHeight: {\n      height: 240\n    }\n  }));\n  const classes = useStyles(theme);\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  let myGraph = {\n    nodes: [{\n      id: 'n1',\n      label: 'Alice',\n      size: 15\n    }, {\n      id: 'n2',\n      label: 'Rabbit',\n      size: 30\n    }],\n    edges: [{\n      id: 'e1',\n      source: 'n1',\n      target: 'n2',\n      label: 'SEES'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            avatar: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              component: \"div\",\n              children: [/*#__PURE__*/_jsxDEV(PeopleIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, this), \" Words Network\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this),\n            action: /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"settings\",\n              children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Sigma, {\n            settings: {\n              batchEdgesDrawing: true,\n              defaultLabelColor: '#777',\n              defaultLabelSize: 20,\n              defaultNodeColor: '#3388AA',\n              drawEdgeLabels: false,\n              drawEdges: true,\n              hoverFontStyle: 'text-size: 11',\n              labelThreshold: 12,\n              animationsTime: 6000,\n              drawLabels: true\n            },\n            style: {\n              height: '400px',\n              maxWidth: 'inherit',\n              background: '#0333'\n            },\n            children: /*#__PURE__*/_jsxDEV(LoadJSON, {\n              path: \"./upwork.json\",\n              children: [/*#__PURE__*/_jsxDEV(RelativeSize, {\n                initialSize: 15\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(DragNodes, {\n                onDrag: function noRefCheck() {},\n                onDragend: function noRefCheck() {},\n                onDrop: function noRefCheck() {},\n                onStartdrag: function noRefCheck() {}\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(NOverlap, {\n                duration: 1000,\n                easing: \"quadraticInOut\",\n                gridSize: 40,\n                maxIterations: 100,\n                nodeMargin: 20,\n                scaleNodes: 10,\n                speed: 10\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Words, \"H43PDnWPsspE0TkwGa5lPfJs7XQ=\", true, function () {\n  return [useTheme];\n});\n\n_c = Words;\n\nvar _c;\n\n$RefreshReg$(_c, \"Words\");","map":{"version":3,"sources":["/Users/nanang/neo4J/tuas/web-react/src/components/sna/WordsNetworkSigma.js"],"names":["React","useEffect","useState","useTheme","Grid","Paper","makeStyles","clsx","Avatar","Typography","Card","CardContent","CardHeader","IconButton","Graph","Sigma","SigmaContainer","RandomizeNodePositions","RelativeSize","ZoomControl","DragNodes","NOverlap","LoadJSON","ChevronLeft","ChevronLeftIcon","Menu","MenuIcon","Dashboard","DashboardIcon","Assignment","AssignmentIcon","Twitter","TwitterIcon","MoreVert","MoreVertIcon","People","PeopleIcon","Words","theme","useStyles","root","display","paper","padding","spacing","overflow","flexDirection","fixedHeight","height","classes","fixedHeightPaper","myGraph","nodes","id","label","size","edges","source","target","batchEdgesDrawing","defaultLabelColor","defaultLabelSize","defaultNodeColor","drawEdgeLabels","drawEdges","hoverFontStyle","labelThreshold","animationsTime","drawLabels","maxWidth","background","noRefCheck"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,mBAA5B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SACEC,KADF,EAEEC,cAFF,EAGEC,sBAHF,EAIEC,YAJF,EAKEC,WALF,EAMEC,SANF,EAOEC,QAPF,EAQEC,QARF,QASO,aATP;AAWA,SACEC,WAAW,IAAIC,eADjB,EAEEC,IAAI,IAAIC,QAFV,EAGEC,SAAS,IAAIC,aAHf,EAIEC,UAAU,IAAIC,cAJhB,EAKEC,OAAO,IAAIC,WALb,EAMEC,QAAQ,IAAIC,YANd,EAOEC,MAAM,IAAIC,UAPZ,QAQO,oBARP;;AAUA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC9B,QAAMC,KAAK,GAAGnC,QAAQ,EAAtB;AACA,QAAMoC,SAAS,GAAGjC,UAAU,CAAEgC,KAAD,KAAY;AACvCE,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAE;AADL,KADiC;AAIvCC,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEL,KAAK,CAACM,OAAN,CAAc,CAAd,CADJ;AAELH,MAAAA,OAAO,EAAE,MAFJ;AAGLI,MAAAA,QAAQ,EAAE,MAHL;AAILC,MAAAA,aAAa,EAAE;AAJV,KAJgC;AAUvCC,IAAAA,WAAW,EAAE;AACXC,MAAAA,MAAM,EAAE;AADG;AAV0B,GAAZ,CAAD,CAA5B;AAeA,QAAMC,OAAO,GAAGV,SAAS,CAACD,KAAD,CAAzB;AACA,QAAMY,gBAAgB,GAAG3C,IAAI,CAAC0C,OAAO,CAACP,KAAT,EAAgBO,OAAO,CAACF,WAAxB,CAA7B;AAEA,MAAII,OAAO,GAAG;AACZC,IAAAA,KAAK,EAAE,CACL;AAAEC,MAAAA,EAAE,EAAE,IAAN;AAAYC,MAAAA,KAAK,EAAE,OAAnB;AAA4BC,MAAAA,IAAI,EAAE;AAAlC,KADK,EAEL;AAAEF,MAAAA,EAAE,EAAE,IAAN;AAAYC,MAAAA,KAAK,EAAE,QAAnB;AAA6BC,MAAAA,IAAI,EAAE;AAAnC,KAFK,CADK;AAKZC,IAAAA,KAAK,EAAE,CAAC;AAAEH,MAAAA,EAAE,EAAE,IAAN;AAAYI,MAAAA,MAAM,EAAE,IAApB;AAA0BC,MAAAA,MAAM,EAAE,IAAlC;AAAwCJ,MAAAA,KAAK,EAAE;AAA/C,KAAD;AALK,GAAd;AAQA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BAEE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA,+BACE,QAAC,IAAD;AAAA,kCACE,QAAC,UAAD;AACE,YAAA,MAAM,eACJ,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,IAApB;AAAyB,cAAA,SAAS,EAAC,KAAnC;AAAA,sCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,sBADF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAME,YAAA,MAAM,eACJ,QAAC,UAAD;AAAY,4BAAW,UAAvB;AAAA,qCACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,kBADF,eAaE,QAAC,KAAD;AACE,YAAA,QAAQ,EAAE;AACRK,cAAAA,iBAAiB,EAAE,IADX;AAERC,cAAAA,iBAAiB,EAAE,MAFX;AAGRC,cAAAA,gBAAgB,EAAE,EAHV;AAIRC,cAAAA,gBAAgB,EAAE,SAJV;AAKRC,cAAAA,cAAc,EAAE,KALR;AAMRC,cAAAA,SAAS,EAAE,IANH;AAORC,cAAAA,cAAc,EAAE,eAPR;AAQRC,cAAAA,cAAc,EAAE,EARR;AASRC,cAAAA,cAAc,EAAE,IATR;AAURC,cAAAA,UAAU,EAAE;AAVJ,aADZ;AAaE,YAAA,KAAK,EAAE;AACLpB,cAAAA,MAAM,EAAE,OADH;AAELqB,cAAAA,QAAQ,EAAE,SAFL;AAGLC,cAAAA,UAAU,EAAE;AAHP,aAbT;AAAA,mCAmBE,QAAC,QAAD;AAAU,cAAA,IAAI,EAAC,eAAf;AAAA,sCACE,QAAC,YAAD;AAAc,gBAAA,WAAW,EAAE;AAA3B;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,SAAD;AACE,gBAAA,MAAM,EAAE,SAASC,UAAT,GAAsB,CAAE,CADlC;AAEE,gBAAA,SAAS,EAAE,SAASA,UAAT,GAAsB,CAAE,CAFrC;AAGE,gBAAA,MAAM,EAAE,SAASA,UAAT,GAAsB,CAAE,CAHlC;AAIE,gBAAA,WAAW,EAAE,SAASA,UAAT,GAAsB,CAAE;AAJvC;AAAA;AAAA;AAAA;AAAA,sBAFF,eASE,QAAC,QAAD;AACE,gBAAA,QAAQ,EAAE,IADZ;AAEE,gBAAA,MAAM,EAAC,gBAFT;AAGE,gBAAA,QAAQ,EAAE,EAHZ;AAIE,gBAAA,aAAa,EAAE,GAJjB;AAKE,gBAAA,UAAU,EAAE,EALd;AAME,gBAAA,UAAU,EAAE,EANd;AAOE,gBAAA,KAAK,EAAE;AAPT;AAAA;AAAA;AAAA;AAAA,sBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAnBF;AAAA;AAAA;AAAA;AAAA,kBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AA8DD;;GA1FuBlC,K;UACRlC,Q;;;KADQkC,K","sourcesContent":["import React from 'react'\nimport { useEffect, useState } from 'react'\nimport { useTheme } from '@material-ui/core/styles'\nimport { Grid, Paper } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport clsx from 'clsx'\n\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport IconButton from '@material-ui/core/IconButton'\n\nimport Graph from 'graphology'\nimport {\n  Sigma,\n  SigmaContainer,\n  RandomizeNodePositions,\n  RelativeSize,\n  ZoomControl,\n  DragNodes,\n  NOverlap,\n  LoadJSON,\n} from 'react-sigma'\n\nimport {\n  ChevronLeft as ChevronLeftIcon,\n  Menu as MenuIcon,\n  Dashboard as DashboardIcon,\n  Assignment as AssignmentIcon,\n  Twitter as TwitterIcon,\n  MoreVert as MoreVertIcon,\n  People as PeopleIcon,\n} from '@material-ui/icons'\n\nexport default function Words() {\n  const theme = useTheme()\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n    },\n    paper: {\n      padding: theme.spacing(2),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    fixedHeight: {\n      height: 240,\n    },\n  }))\n\n  const classes = useStyles(theme)\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight)\n\n  let myGraph = {\n    nodes: [\n      { id: 'n1', label: 'Alice', size: 15 },\n      { id: 'n2', label: 'Rabbit', size: 30 },\n    ],\n    edges: [{ id: 'e1', source: 'n1', target: 'n2', label: 'SEES' }],\n  }\n\n  return (\n    <React.Fragment>\n      {/* TwitterUser */}\n      <Grid container spacing={4}>\n        <Grid item xs={12}>\n          <Card>\n            <CardHeader\n              avatar={\n                <Typography variant=\"h5\" component=\"div\">\n                  <PeopleIcon /> Words Network\n                </Typography>\n              }\n              action={\n                <IconButton aria-label=\"settings\">\n                  <MoreVertIcon />\n                </IconButton>\n              }\n            />\n            <Sigma\n              settings={{\n                batchEdgesDrawing: true,\n                defaultLabelColor: '#777',\n                defaultLabelSize: 20,\n                defaultNodeColor: '#3388AA',\n                drawEdgeLabels: false,\n                drawEdges: true,\n                hoverFontStyle: 'text-size: 11',\n                labelThreshold: 12,\n                animationsTime: 6000,\n                drawLabels: true,\n              }}\n              style={{\n                height: '400px',\n                maxWidth: 'inherit',\n                background: '#0333',\n              }}\n            >\n              <LoadJSON path=\"./upwork.json\">\n                <RelativeSize initialSize={15} />\n                <DragNodes\n                  onDrag={function noRefCheck() {}}\n                  onDragend={function noRefCheck() {}}\n                  onDrop={function noRefCheck() {}}\n                  onStartdrag={function noRefCheck() {}}\n                />\n\n                <NOverlap\n                  duration={1000}\n                  easing=\"quadraticInOut\"\n                  gridSize={40}\n                  maxIterations={100}\n                  nodeMargin={20}\n                  scaleNodes={10}\n                  speed={10}\n                />\n              </LoadJSON>\n            </Sigma>\n          </Card>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}