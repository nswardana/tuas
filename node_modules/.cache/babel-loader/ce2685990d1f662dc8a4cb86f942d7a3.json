{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/nanang/neo4J/tuas/web-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/nanang/neo4J/tuas/web-react/src/components/sna/UsersNetworkSigma.js\",\n    _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Grid, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport Graph from 'graphology';\nimport { Sigma, SigmaContainer, RandomizeNodePositions, RelativeSize, ZoomControl, DragNodes, NOverlap, LoadJSON, ForceAtlas2 } from 'react-sigma';\nimport ForceLink from 'react-sigma/lib/ForceLink';\nimport ZoomButtons from './ZoomButtons';\nimport { ChevronLeft as ChevronLeftIcon, Menu as MenuIcon, Dashboard as DashboardIcon, Assignment as AssignmentIcon, Twitter as TwitterIcon, MoreVert as MoreVertIcon, People as PeopleIcon } from '@material-ui/icons';\nimport { useQuery, useLazyQuery, gql } from '@apollo/client';\nimport Title from './Title';\nimport moment from 'moment';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nconst GET_ALL_USER = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  {\\n    getAllUser {\\n      id\\n      username\\n      screen_name\\n    }\\n  }\\n\"])));\nconst GET_RELATIONAL_USER = gql(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  {\\n    getAllUserRelations {\\n      node_start\\n      node_end\\n      label\\n    }\\n  }\\n\"])));\nconst GET_COUNT_RELATIONAL_USER = gql(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  {\\n    getTopUserWithCountRel {\\n      id\\n      username\\n      screen_name\\n      countrel\\n    }\\n  }\\n\"])));\nimport userIcon from './user.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UsersNetwork() {\n  _s();\n\n  var userEmail = '';\n  const user = useQuery(GET_ALL_USER);\n  const userrel = useQuery(GET_RELATIONAL_USER, {\n    skip: user.loading\n  });\n  const userCountRel = useQuery(GET_COUNT_RELATIONAL_USER, {\n    skip: userrel.loading\n  });\n  const errors = user.error || userrel.error || userCountRel.error;\n  const loading = user.loading || userrel.loading || userCountRel.loading;\n  if (errors) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 22\n  }, this);\n  if (loading) return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 23\n  }, this);\n  console.log('data');\n  console.log(user.data);\n  console.log('dataRel');\n  console.log(userrel.data);\n  const userCountRelArr = [...userCountRel.data.getTopUserWithCountRel].sort((a, b) => b.countrel - a.countrel);\n  const userCountRelArr10 = userCountRelArr.slice(0, 10);\n  const userCountRelArrObj = userCountRelArr10.map(({\n    id,\n    username,\n    countrel\n  }) => ({\n    id: id,\n    countrel: countrel,\n    username: username\n  }));\n  console.log(userCountRelArrObj);\n  console.log('userCountRelArr');\n  console.log(userCountRelArr);\n\n  function setSizeNode(nodeId) {\n    const found = userCountRelArr10.find(obj => {\n      return obj.id === nodeId;\n    });\n    var sizeNode = 3;\n    var colorNode = '#008cc2';\n    var typeIcon = 'image';\n    var image = {\n      url: userIcon,\n      // scale/clip are ratio values applied on top of 'size'\n      scale: 3,\n      clip: 3,\n      w: 24,\n      h: 24\n    };\n    if (typeof found != 'undefined') if (found.countrel > 10) {\n      sizeNode = 15;\n      colorNode = '#d24e01';\n      typeIcon = 'image';\n      image = {\n        url: userIcon,\n        // scale/clip are ratio values applied on top of 'size'\n        scale: 3,\n        clip: 3,\n        w: 24,\n        h: 24\n      };\n    }\n    return {\n      sizeNode: sizeNode,\n      colorNode: colorNode,\n      typeIcon: typeIcon,\n      image: image\n    };\n  }\n\n  const NodeUser = user.data.getAllUser.map(({\n    id,\n    username,\n    screen_name,\n    index\n  }) => ({\n    id: id,\n    label: screen_name,\n    x: 100 * Math.cos(2 * 1 * Math.PI / Math.random()),\n    y: 100 * Math.cos(2 * 1 * Math.PI / Math.random()),\n    size: setSizeNode(id).sizeNode,\n    color: setSizeNode(id).colorNode,\n    type: 'image',\n    image: setSizeNode(id).image,\n    icon: {\n      // icon object\n      name: 'f007',\n      // Fontawesome unicode\n      color: '#171c1c',\n      // Color of the font\n      scale: 1.0 // Scale ratio\n\n    }\n  }));\n  const rellUser = userrel.data.getAllUserRelations.map(({\n    node_start,\n    node_end,\n    label\n  }) => ({\n    id: Math.random(),\n    source: node_start,\n    target: node_end,\n    type: 'curve',\n    label: label,\n    color: '#DDD'\n  }));\n  var graph = {\n    nodes: NodeUser,\n    edges: rellUser\n  };\n  console.log('graph');\n  console.log(graph);\n  Sigma.bind('overNode outNode clickNode doubleClickNode rightClickNode', function (e) {\n    alert('');\n    console.log(e.type, e.data.node.label, e.data.captor);\n  });\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 9,\n        children: /*#__PURE__*/_jsxDEV(Sigma, {\n          renderer: \"canvas\",\n          settings: {\n            batchEdgesDrawing: true,\n            defaultLabelColor: '#777',\n            defaultLabelSize: 20,\n            defaultNodeColor: '#3388AA',\n            drawEdgeLabels: false,\n            drawEdges: true,\n            hoverFontStyle: 'text-size: 11',\n            labelThreshold: 12,\n            animationsTime: 6000,\n            drawLabels: true\n          },\n          style: {\n            height: '1000px',\n            Width: '1000px',\n            backgroundColor: 'lightgray'\n          },\n          graph: graph,\n          children: [/*#__PURE__*/_jsxDEV(RelativeSize, {\n            initialSize: 8\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DragNodes, {\n            onDrag: function noRefCheck() {},\n            onDragend: function noRefCheck() {},\n            onDrop: function noRefCheck() {},\n            onStartdrag: function noRefCheck() {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ForceAtlas2, {\n            timeout: 2000,\n            worker: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: [\"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(ZoomButtons, {\n              style: {\n                margin: '0px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            avatar: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              component: \"div\",\n              style: {\n                color: '#12939A'\n              },\n              children: [/*#__PURE__*/_jsxDEV(PeopleIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 19\n              }, this), \" User\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this),\n            action: /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"settings\",\n              children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              size: \"small\",\n              children: /*#__PURE__*/_jsxDEV(TableBody, {\n                children: userCountRelArr10.map((userArr, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: [\" \", userArr.screen_name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: userArr.countrel\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 23\n                  }, this)]\n                }, userArr.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UsersNetwork, \"VvMz6Mh/ENO0F/EneKaL9KTwuJs=\", false, function () {\n  return [useQuery, useQuery, useQuery];\n});\n\n_c = UsersNetwork;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersNetwork\");","map":{"version":3,"sources":["/Users/nanang/neo4J/tuas/web-react/src/components/sna/UsersNetworkSigma.js"],"names":["React","useEffect","useState","useTheme","Grid","Paper","makeStyles","clsx","Avatar","Typography","Card","CardContent","CardHeader","IconButton","Table","TableBody","TableCell","TableHead","TableRow","Button","Graph","Sigma","SigmaContainer","RandomizeNodePositions","RelativeSize","ZoomControl","DragNodes","NOverlap","LoadJSON","ForceAtlas2","ForceLink","ZoomButtons","ChevronLeft","ChevronLeftIcon","Menu","MenuIcon","Dashboard","DashboardIcon","Assignment","AssignmentIcon","Twitter","TwitterIcon","MoreVert","MoreVertIcon","People","PeopleIcon","useQuery","useLazyQuery","gql","Title","moment","CircularProgress","GET_ALL_USER","GET_RELATIONAL_USER","GET_COUNT_RELATIONAL_USER","userIcon","UsersNetwork","userEmail","user","userrel","skip","loading","userCountRel","errors","error","console","log","data","userCountRelArr","getTopUserWithCountRel","sort","a","b","countrel","userCountRelArr10","slice","userCountRelArrObj","map","id","username","setSizeNode","nodeId","found","find","obj","sizeNode","colorNode","typeIcon","image","url","scale","clip","w","h","NodeUser","getAllUser","screen_name","index","label","x","Math","cos","PI","random","y","size","color","type","icon","name","rellUser","getAllUserRelations","node_start","node_end","source","target","graph","nodes","edges","bind","e","alert","node","captor","batchEdgesDrawing","defaultLabelColor","defaultLabelSize","defaultNodeColor","drawEdgeLabels","drawEdges","hoverFontStyle","labelThreshold","animationsTime","drawLabels","height","Width","backgroundColor","noRefCheck","margin","userArr"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useEffect, useState } from 'react'\nimport { useTheme } from '@material-ui/core/styles'\nimport { Grid, Paper } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\n\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport IconButton from '@material-ui/core/IconButton'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Button from '@material-ui/core/Button'\n\nimport Graph from 'graphology'\nimport {\n  Sigma,\n  SigmaContainer,\n  RandomizeNodePositions,\n  RelativeSize,\n  ZoomControl,\n  DragNodes,\n  NOverlap,\n  LoadJSON,\n  ForceAtlas2,\n} from 'react-sigma'\n\nimport ForceLink from 'react-sigma/lib/ForceLink'\nimport ZoomButtons from './ZoomButtons'\n\nimport {\n  ChevronLeft as ChevronLeftIcon,\n  Menu as MenuIcon,\n  Dashboard as DashboardIcon,\n  Assignment as AssignmentIcon,\n  Twitter as TwitterIcon,\n  MoreVert as MoreVertIcon,\n  People as PeopleIcon,\n} from '@material-ui/icons'\n\nimport { useQuery, useLazyQuery, gql } from '@apollo/client'\nimport Title from './Title'\nimport moment from 'moment'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nconst GET_ALL_USER = gql`\n  {\n    getAllUser {\n      id\n      username\n      screen_name\n    }\n  }\n`\n\nconst GET_RELATIONAL_USER = gql`\n  {\n    getAllUserRelations {\n      node_start\n      node_end\n      label\n    }\n  }\n`\n\nconst GET_COUNT_RELATIONAL_USER = gql`\n  {\n    getTopUserWithCountRel {\n      id\n      username\n      screen_name\n      countrel\n    }\n  }\n`\nimport userIcon from './user.png'\n\nexport default function UsersNetwork() {\n  var userEmail = ''\n  const user = useQuery(GET_ALL_USER)\n  const userrel = useQuery(GET_RELATIONAL_USER, {\n    skip: user.loading,\n  })\n\n  const userCountRel = useQuery(GET_COUNT_RELATIONAL_USER, {\n    skip: userrel.loading,\n  })\n\n  const errors = user.error || userrel.error || userCountRel.error\n  const loading = user.loading || userrel.loading || userCountRel.loading\n\n  if (errors) return <p>Error</p>\n  if (loading) return <CircularProgress />\n\n  console.log('data')\n  console.log(user.data)\n\n  console.log('dataRel')\n  console.log(userrel.data)\n\n  const userCountRelArr = [...userCountRel.data.getTopUserWithCountRel].sort(\n    (a, b) => b.countrel - a.countrel\n  )\n\n  const userCountRelArr10 = userCountRelArr.slice(0, 10)\n\n  const userCountRelArrObj = userCountRelArr10.map(\n    ({ id, username, countrel }) => ({\n      id: id,\n      countrel: countrel,\n      username: username,\n    })\n  )\n\n  console.log(userCountRelArrObj)\n\n  console.log('userCountRelArr')\n  console.log(userCountRelArr)\n\n  function setSizeNode(nodeId) {\n    const found = userCountRelArr10.find((obj) => {\n      return obj.id === nodeId\n    })\n    var sizeNode = 3\n    var colorNode = '#008cc2'\n    var typeIcon = 'image'\n    var image = {\n      url: userIcon,\n      // scale/clip are ratio values applied on top of 'size'\n      scale: 3,\n      clip: 3,\n      w: 24,\n      h: 24,\n    }\n\n    if (typeof found != 'undefined')\n      if (found.countrel > 10) {\n        sizeNode = 15\n        colorNode = '#d24e01'\n        typeIcon = 'image'\n        image = {\n          url: userIcon,\n          // scale/clip are ratio values applied on top of 'size'\n          scale: 3,\n          clip: 3,\n          w: 24,\n          h: 24,\n        }\n      }\n    return {\n      sizeNode: sizeNode,\n      colorNode: colorNode,\n      typeIcon: typeIcon,\n      image: image,\n    }\n  }\n\n  const NodeUser = user.data.getAllUser.map(\n    ({ id, username, screen_name, index }) => ({\n      id: id,\n      label: screen_name,\n      x: 100 * Math.cos((2 * 1 * Math.PI) / Math.random()),\n      y: 100 * Math.cos((2 * 1 * Math.PI) / Math.random()),\n      size: setSizeNode(id).sizeNode,\n      color: setSizeNode(id).colorNode,\n      type: 'image',\n      image: setSizeNode(id).image,\n      icon: {\n        // icon object\n        name: 'f007', // Fontawesome unicode\n        color: '#171c1c', // Color of the font\n        scale: 1.0, // Scale ratio\n      },\n    })\n  )\n  const rellUser = userrel.data.getAllUserRelations.map(\n    ({ node_start, node_end, label }) => ({\n      id: Math.random(),\n      source: node_start,\n      target: node_end,\n      type: 'curve',\n      label: label,\n      color: '#DDD',\n    })\n  )\n\n  var graph = { nodes: NodeUser, edges: rellUser }\n\n  console.log('graph')\n  console.log(graph)\n\n  Sigma.bind(\n    'overNode outNode clickNode doubleClickNode rightClickNode',\n    function (e) {\n      alert('')\n      console.log(e.type, e.data.node.label, e.data.captor)\n    }\n  )\n\n  return (\n    <React.Fragment>\n      {/* TwitterUser */}\n      <Grid container spacing={4}>\n        <Grid item xs={9}>\n          <Sigma\n            renderer=\"canvas\"\n            settings={{\n              batchEdgesDrawing: true,\n              defaultLabelColor: '#777',\n              defaultLabelSize: 20,\n              defaultNodeColor: '#3388AA',\n              drawEdgeLabels: false,\n              drawEdges: true,\n              hoverFontStyle: 'text-size: 11',\n              labelThreshold: 12,\n              animationsTime: 6000,\n              drawLabels: true,\n            }}\n            style={{\n              height: '1000px',\n              Width: '1000px',\n              backgroundColor: 'lightgray',\n            }}\n            graph={graph}\n          >\n            <RelativeSize initialSize={8} />\n\n            <DragNodes\n              onDrag={function noRefCheck() {}}\n              onDragend={function noRefCheck() {}}\n              onDrop={function noRefCheck() {}}\n              onStartdrag={function noRefCheck() {}}\n            />\n\n            <ForceAtlas2 timeout={2000} worker />\n\n            <Grid item xs={6}>\n              &nbsp;&nbsp;\n              <ZoomButtons\n                style={{\n                  margin: '0px',\n                }}\n              />\n            </Grid>\n          </Sigma>\n        </Grid>\n        <Grid item xs={3}>\n          <Card>\n            <CardHeader\n              avatar={\n                <Typography\n                  variant=\"h5\"\n                  component=\"div\"\n                  style={{ color: '#12939A' }}\n                >\n                  <PeopleIcon /> User\n                </Typography>\n              }\n              action={\n                <IconButton aria-label=\"settings\">\n                  <MoreVertIcon />\n                </IconButton>\n              }\n            />\n            <CardContent>\n              <Table size=\"small\">\n                <TableBody>\n                  {userCountRelArr10.map((userArr, index) => (\n                    <TableRow key={userArr.id}>\n                      <TableCell> {userArr.screen_name}</TableCell>\n                      <TableCell align=\"right\">{userArr.countrel}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}