{"ast":null,"code":"import _objectSpread from \"/Users/nanang/neo4J/tuas/web-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _taggedTemplateLiteral from \"/Users/nanang/neo4J/tuas/web-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/nanang/neo4J/tuas/web-react/src/components/sna/UsersNetwork.js\",\n    _templateObject,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Grid, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport IconButton from '@material-ui/core/IconButton';\nimport { useQuery, gql } from '@apollo/client';\nimport Title from './Title';\nimport moment from 'moment';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { ChevronLeft as ChevronLeftIcon, Menu as MenuIcon, Dashboard as DashboardIcon, Assignment as AssignmentIcon, Twitter as TwitterIcon, MoreVert as MoreVertIcon, People as PeopleIcon } from '@material-ui/icons';\nimport { ForceGraph, ForceGraphNode, ForceGraphLink, ForceGraphArrowLink } from 'react-vis-force';\nimport lesMisJSON from './les-miserables.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_ALL_USER = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  {\\n    getAllUser {\\n      id\\n      username\\n      screen_name\\n    }\\n  }\\n\"])));\nexport default function UsersNetwork() {\n  _s();\n\n  const _useQuery = useQuery(GET_ALL_USER),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 21\n  }, this);\n  if (loading) return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 23\n  }, this);\n  const theme = useTheme();\n  const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex'\n    },\n    paper: {\n      padding: theme.spacing(2),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column'\n    },\n    fixedHeight: {\n      height: 240\n    }\n  }));\n  const classes = useStyles(theme);\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  console.log(lesMisJSON);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            avatar: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              component: \"div\",\n              style: {\n                color: '#12939A'\n              },\n              children: [/*#__PURE__*/_jsxDEV(PeopleIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this), \" User Network\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this),\n            action: /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"settings\",\n              children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ForceGraph, {\n            children: [lesMisJSON.nodes.map((node, index) => /*#__PURE__*/_jsxDEV(ForceGraphNode, {\n              fill: \"#47d3d9\",\n              node: _objectSpread(_objectSpread({}, node), {}, {\n                radius: 5\n              })\n            }, node.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)), lesMisJSON.links.map((link, index) => /*#__PURE__*/_jsxDEV(ForceGraphLink, {\n              link: _objectSpread(_objectSpread({}, link), {}, {\n                value: 2\n              })\n            }, \"\".concat(link.source, \"=>\").concat(link.target), false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UsersNetwork, \"qMQFJ7EWTl/vSHAQGhHn9xeC2OQ=\", true, function () {\n  return [useQuery, useTheme];\n});\n\n_c = UsersNetwork;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersNetwork\");","map":{"version":3,"sources":["/Users/nanang/neo4J/tuas/web-react/src/components/sna/UsersNetwork.js"],"names":["React","useTheme","Grid","Paper","makeStyles","clsx","Avatar","Typography","Card","CardContent","CardHeader","IconButton","useQuery","gql","Title","moment","CircularProgress","ChevronLeft","ChevronLeftIcon","Menu","MenuIcon","Dashboard","DashboardIcon","Assignment","AssignmentIcon","Twitter","TwitterIcon","MoreVert","MoreVertIcon","People","PeopleIcon","ForceGraph","ForceGraphNode","ForceGraphLink","ForceGraphArrowLink","lesMisJSON","GET_ALL_USER","UsersNetwork","loading","error","data","theme","useStyles","root","display","paper","padding","spacing","overflow","flexDirection","fixedHeight","height","classes","fixedHeightPaper","console","log","color","nodes","map","node","index","radius","id","links","link","value","source","target"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useTheme } from '@material-ui/core/styles'\nimport { Grid, Paper } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\n\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport IconButton from '@material-ui/core/IconButton'\n\nimport { useQuery, gql } from '@apollo/client'\nimport Title from './Title'\nimport moment from 'moment'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport {\n  ChevronLeft as ChevronLeftIcon,\n  Menu as MenuIcon,\n  Dashboard as DashboardIcon,\n  Assignment as AssignmentIcon,\n  Twitter as TwitterIcon,\n  MoreVert as MoreVertIcon,\n  People as PeopleIcon,\n} from '@material-ui/icons'\n\nimport {\n  ForceGraph,\n  ForceGraphNode,\n  ForceGraphLink,\n  ForceGraphArrowLink,\n} from 'react-vis-force'\n\nimport lesMisJSON from './les-miserables.json'\n\nconst GET_ALL_USER = gql`\n  {\n    getAllUser {\n      id\n      username\n      screen_name\n    }\n  }\n`\n\nexport default function UsersNetwork() {\n  const { loading, error, data } = useQuery(GET_ALL_USER)\n\n  if (error) return <p>Error</p>\n  if (loading) return <CircularProgress />\n\n  const theme = useTheme()\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n    },\n    paper: {\n      padding: theme.spacing(2),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    fixedHeight: {\n      height: 240,\n    },\n  }))\n\n  const classes = useStyles(theme)\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight)\n\n  console.log(lesMisJSON)\n\n  return (\n    <React.Fragment>\n      {/* TwitterUser */}\n      <Grid container spacing={4}>\n        <Grid item xs={12}>\n          <Card>\n            <CardHeader\n              avatar={\n                <Typography\n                  variant=\"h5\"\n                  component=\"div\"\n                  style={{ color: '#12939A' }}\n                >\n                  <PeopleIcon /> User Network\n                </Typography>\n              }\n              action={\n                <IconButton aria-label=\"settings\">\n                  <MoreVertIcon />\n                </IconButton>\n              }\n            />\n            <ForceGraph>\n              {lesMisJSON.nodes.map((node, index) => (\n                <ForceGraphNode\n                  key={node.id}\n                  fill=\"#47d3d9\"\n                  node={{ ...node, radius: 5 }}\n                />\n              ))}\n              {lesMisJSON.links.map((link, index) => (\n                <ForceGraphLink\n                  key={`${link.source}=>${link.target}`}\n                  link={{ ...link, value: 2 }}\n                />\n              ))}\n            </ForceGraph>\n          </Card>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}