{"ast":null,"code":"import _slicedToArray from \"/Users/nanang/neo4J/tuas/web-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@mui/utils\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useFormControlUnstyledContext } from '../FormControlUnstyled';\nimport extractEventHandlers from '../utils/extractEventHandlers';\nexport default function useInput(parameters) {\n  const defaultValueProp = parameters.defaultValue,\n        _parameters$disabled = parameters.disabled,\n        disabledProp = _parameters$disabled === void 0 ? false : _parameters$disabled,\n        _parameters$error = parameters.error,\n        errorProp = _parameters$error === void 0 ? false : _parameters$error,\n        onBlur = parameters.onBlur,\n        onChange = parameters.onChange,\n        onFocus = parameters.onFocus,\n        _parameters$required = parameters.required,\n        requiredProp = _parameters$required === void 0 ? false : _parameters$required,\n        valueProp = parameters.value;\n  const formControlContext = useFormControlUnstyledContext();\n  let defaultValue;\n  let disabled;\n  let error;\n  let required;\n  let value;\n\n  if (formControlContext) {\n    var _formControlContext$d, _formControlContext$e, _formControlContext$r;\n\n    defaultValue = undefined;\n    disabled = (_formControlContext$d = formControlContext.disabled) != null ? _formControlContext$d : false;\n    error = (_formControlContext$e = formControlContext.error) != null ? _formControlContext$e : false;\n    required = (_formControlContext$r = formControlContext.required) != null ? _formControlContext$r : false;\n    value = formControlContext.value;\n\n    if (process.env.NODE_ENV !== 'production') {\n      const definedLocalProps = ['defaultValue', 'disabled', 'error', 'required', 'value'].filter(prop => parameters[prop] !== undefined);\n\n      if (definedLocalProps.length > 0) {\n        console.warn(['MUI: You have set props on an input that is inside a FormControlUnstyled.', 'Set these props on a FormControlUnstyled instead. Otherwise they will be ignored.', \"Ignored props: \".concat(definedLocalProps.join(', '))].join('\\n'));\n      }\n    }\n  } else {\n    defaultValue = defaultValueProp;\n    disabled = disabledProp;\n    error = errorProp;\n    required = requiredProp;\n    value = valueProp;\n  }\n\n  const _React$useRef = React.useRef(value != null),\n        isControlled = _React$useRef.current;\n\n  const handleInputRefWarning = React.useCallback(instance => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (instance && instance.nodeName !== 'INPUT' && !instance.focus) {\n        console.error(['MUI: You have provided a `components.Input` to the input component', 'that does not correctly handle the `ref` prop.', 'Make sure the `ref` prop is called with a HTMLInputElement.'].join('\\n'));\n      }\n    }\n  }, []);\n  const inputRef = React.useRef(null);\n  const handleInputRef = useForkRef(inputRef, handleInputRefWarning);\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        focused = _React$useState2[0],\n        setFocused = _React$useState2[1]; // The blur won't fire when the disabled state is set on a focused input.\n  // We need to book keep the focused state manually.\n\n\n  React.useEffect(() => {\n    if (!formControlContext && disabled && focused) {\n      setFocused(false); // @ts-ignore\n\n      onBlur == null ? void 0 : onBlur();\n    }\n  }, [formControlContext, disabled, focused, onBlur]);\n\n  const handleFocus = otherHandlers => event => {\n    var _otherHandlers$onFocu; // Fix a bug with IE11 where the focus/blur events are triggered\n    // while the component is disabled.\n\n\n    if (formControlContext != null && formControlContext.disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    (_otherHandlers$onFocu = otherHandlers.onFocus) == null ? void 0 : _otherHandlers$onFocu.call(otherHandlers, event);\n\n    if (formControlContext && formControlContext.onFocus) {\n      var _formControlContext$o;\n\n      formControlContext == null ? void 0 : (_formControlContext$o = formControlContext.onFocus) == null ? void 0 : _formControlContext$o.call(formControlContext);\n    } else {\n      setFocused(true);\n    }\n  };\n\n  const handleBlur = otherHandlers => event => {\n    var _otherHandlers$onBlur;\n\n    (_otherHandlers$onBlur = otherHandlers.onBlur) == null ? void 0 : _otherHandlers$onBlur.call(otherHandlers, event);\n\n    if (formControlContext && formControlContext.onBlur) {\n      formControlContext.onBlur();\n    } else {\n      setFocused(false);\n    }\n  };\n\n  const handleChange = otherHandlers => (event, ...args) => {\n    var _formControlContext$o2, _otherHandlers$onChan;\n\n    if (!isControlled) {\n      const element = event.target || inputRef.current;\n\n      if (element == null) {\n        throw new Error(process.env.NODE_ENV !== \"production\" ? \"MUI: Expected valid input target. Did you use a custom `components.Input` and forget to forward refs? See https://mui.com/r/input-component-ref-interface for more info.\" : _formatMuiErrorMessage(17));\n      }\n    }\n\n    formControlContext == null ? void 0 : (_formControlContext$o2 = formControlContext.onChange) == null ? void 0 : _formControlContext$o2.call(formControlContext, event); // @ts-ignore\n\n    (_otherHandlers$onChan = otherHandlers.onChange) == null ? void 0 : _otherHandlers$onChan.call(otherHandlers, event, ...args);\n  };\n\n  const handleClick = otherHandlers => event => {\n    var _otherHandlers$onClic;\n\n    if (inputRef.current && event.currentTarget === event.target) {\n      inputRef.current.focus();\n    }\n\n    (_otherHandlers$onClic = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic.call(otherHandlers, event);\n  };\n\n  const getRootProps = (externalProps = {}) => {\n    // onBlur, onChange and onFocus are forwarded to the input slot.\n    const propsEventHandlers = extractEventHandlers(parameters, ['onBlur', 'onChange', 'onFocus']);\n\n    const externalEventHandlers = _extends({}, propsEventHandlers, extractEventHandlers(externalProps));\n\n    return _extends({}, externalProps, externalEventHandlers, {\n      onClick: handleClick(externalEventHandlers)\n    });\n  };\n\n  const getInputProps = (externalProps = {}) => {\n    const propsEventHandlers = {\n      onBlur,\n      onChange,\n      onFocus\n    };\n\n    const externalEventHandlers = _extends({}, propsEventHandlers, extractEventHandlers(externalProps));\n\n    const mergedEventHandlers = _extends({}, externalProps, externalEventHandlers, {\n      onBlur: handleBlur(externalEventHandlers),\n      onChange: handleChange(externalEventHandlers),\n      onFocus: handleFocus(externalEventHandlers)\n    });\n\n    return _extends({}, mergedEventHandlers, {\n      'aria-invalid': error || undefined,\n      defaultValue: defaultValue,\n      ref: handleInputRef,\n      value: value,\n      required,\n      disabled\n    });\n  };\n\n  return {\n    disabled,\n    error,\n    focused,\n    formControlContext,\n    getInputProps,\n    getRootProps,\n    required,\n    value\n  };\n}","map":{"version":3,"sources":["/Users/nanang/neo4J/tuas/web-react/node_modules/@mui/base/InputUnstyled/useInput.js"],"names":["_extends","formatMuiErrorMessage","_formatMuiErrorMessage","React","unstable_useForkRef","useForkRef","useFormControlUnstyledContext","extractEventHandlers","useInput","parameters","defaultValueProp","defaultValue","disabled","disabledProp","error","errorProp","onBlur","onChange","onFocus","required","requiredProp","valueProp","value","formControlContext","_formControlContext$d","_formControlContext$e","_formControlContext$r","undefined","process","env","NODE_ENV","definedLocalProps","filter","prop","length","console","warn","join","useRef","isControlled","current","handleInputRefWarning","useCallback","instance","nodeName","focus","inputRef","handleInputRef","useState","focused","setFocused","useEffect","handleFocus","otherHandlers","event","_otherHandlers$onFocu","stopPropagation","call","_formControlContext$o","handleBlur","_otherHandlers$onBlur","handleChange","args","_formControlContext$o2","_otherHandlers$onChan","element","target","Error","handleClick","_otherHandlers$onClic","currentTarget","onClick","getRootProps","externalProps","propsEventHandlers","externalEventHandlers","getInputProps","mergedEventHandlers","ref"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@mui/utils\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useFormControlUnstyledContext } from '../FormControlUnstyled';\nimport extractEventHandlers from '../utils/extractEventHandlers';\nexport default function useInput(parameters) {\n  const {\n    defaultValue: defaultValueProp,\n    disabled: disabledProp = false,\n    error: errorProp = false,\n    onBlur,\n    onChange,\n    onFocus,\n    required: requiredProp = false,\n    value: valueProp\n  } = parameters;\n  const formControlContext = useFormControlUnstyledContext();\n  let defaultValue;\n  let disabled;\n  let error;\n  let required;\n  let value;\n\n  if (formControlContext) {\n    var _formControlContext$d, _formControlContext$e, _formControlContext$r;\n\n    defaultValue = undefined;\n    disabled = (_formControlContext$d = formControlContext.disabled) != null ? _formControlContext$d : false;\n    error = (_formControlContext$e = formControlContext.error) != null ? _formControlContext$e : false;\n    required = (_formControlContext$r = formControlContext.required) != null ? _formControlContext$r : false;\n    value = formControlContext.value;\n\n    if (process.env.NODE_ENV !== 'production') {\n      const definedLocalProps = ['defaultValue', 'disabled', 'error', 'required', 'value'].filter(prop => parameters[prop] !== undefined);\n\n      if (definedLocalProps.length > 0) {\n        console.warn(['MUI: You have set props on an input that is inside a FormControlUnstyled.', 'Set these props on a FormControlUnstyled instead. Otherwise they will be ignored.', `Ignored props: ${definedLocalProps.join(', ')}`].join('\\n'));\n      }\n    }\n  } else {\n    defaultValue = defaultValueProp;\n    disabled = disabledProp;\n    error = errorProp;\n    required = requiredProp;\n    value = valueProp;\n  }\n\n  const {\n    current: isControlled\n  } = React.useRef(value != null);\n  const handleInputRefWarning = React.useCallback(instance => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (instance && instance.nodeName !== 'INPUT' && !instance.focus) {\n        console.error(['MUI: You have provided a `components.Input` to the input component', 'that does not correctly handle the `ref` prop.', 'Make sure the `ref` prop is called with a HTMLInputElement.'].join('\\n'));\n      }\n    }\n  }, []);\n  const inputRef = React.useRef(null);\n  const handleInputRef = useForkRef(inputRef, handleInputRefWarning);\n  const [focused, setFocused] = React.useState(false); // The blur won't fire when the disabled state is set on a focused input.\n  // We need to book keep the focused state manually.\n\n  React.useEffect(() => {\n    if (!formControlContext && disabled && focused) {\n      setFocused(false); // @ts-ignore\n\n      onBlur == null ? void 0 : onBlur();\n    }\n  }, [formControlContext, disabled, focused, onBlur]);\n\n  const handleFocus = otherHandlers => event => {\n    var _otherHandlers$onFocu;\n\n    // Fix a bug with IE11 where the focus/blur events are triggered\n    // while the component is disabled.\n    if (formControlContext != null && formControlContext.disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    (_otherHandlers$onFocu = otherHandlers.onFocus) == null ? void 0 : _otherHandlers$onFocu.call(otherHandlers, event);\n\n    if (formControlContext && formControlContext.onFocus) {\n      var _formControlContext$o;\n\n      formControlContext == null ? void 0 : (_formControlContext$o = formControlContext.onFocus) == null ? void 0 : _formControlContext$o.call(formControlContext);\n    } else {\n      setFocused(true);\n    }\n  };\n\n  const handleBlur = otherHandlers => event => {\n    var _otherHandlers$onBlur;\n\n    (_otherHandlers$onBlur = otherHandlers.onBlur) == null ? void 0 : _otherHandlers$onBlur.call(otherHandlers, event);\n\n    if (formControlContext && formControlContext.onBlur) {\n      formControlContext.onBlur();\n    } else {\n      setFocused(false);\n    }\n  };\n\n  const handleChange = otherHandlers => (event, ...args) => {\n    var _formControlContext$o2, _otherHandlers$onChan;\n\n    if (!isControlled) {\n      const element = event.target || inputRef.current;\n\n      if (element == null) {\n        throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: Expected valid input target. Did you use a custom \\`components.Input\\` and forget to forward refs? See https://mui.com/r/input-component-ref-interface for more info.` : _formatMuiErrorMessage(17));\n      }\n    }\n\n    formControlContext == null ? void 0 : (_formControlContext$o2 = formControlContext.onChange) == null ? void 0 : _formControlContext$o2.call(formControlContext, event); // @ts-ignore\n\n    (_otherHandlers$onChan = otherHandlers.onChange) == null ? void 0 : _otherHandlers$onChan.call(otherHandlers, event, ...args);\n  };\n\n  const handleClick = otherHandlers => event => {\n    var _otherHandlers$onClic;\n\n    if (inputRef.current && event.currentTarget === event.target) {\n      inputRef.current.focus();\n    }\n\n    (_otherHandlers$onClic = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic.call(otherHandlers, event);\n  };\n\n  const getRootProps = (externalProps = {}) => {\n    // onBlur, onChange and onFocus are forwarded to the input slot.\n    const propsEventHandlers = extractEventHandlers(parameters, ['onBlur', 'onChange', 'onFocus']);\n\n    const externalEventHandlers = _extends({}, propsEventHandlers, extractEventHandlers(externalProps));\n\n    return _extends({}, externalProps, externalEventHandlers, {\n      onClick: handleClick(externalEventHandlers)\n    });\n  };\n\n  const getInputProps = (externalProps = {}) => {\n    const propsEventHandlers = {\n      onBlur,\n      onChange,\n      onFocus\n    };\n\n    const externalEventHandlers = _extends({}, propsEventHandlers, extractEventHandlers(externalProps));\n\n    const mergedEventHandlers = _extends({}, externalProps, externalEventHandlers, {\n      onBlur: handleBlur(externalEventHandlers),\n      onChange: handleChange(externalEventHandlers),\n      onFocus: handleFocus(externalEventHandlers)\n    });\n\n    return _extends({}, mergedEventHandlers, {\n      'aria-invalid': error || undefined,\n      defaultValue: defaultValue,\n      ref: handleInputRef,\n      value: value,\n      required,\n      disabled\n    });\n  };\n\n  return {\n    disabled,\n    error,\n    focused,\n    formControlContext,\n    getInputProps,\n    getRootProps,\n    required,\n    value\n  };\n}"]},"metadata":{},"sourceType":"module"}