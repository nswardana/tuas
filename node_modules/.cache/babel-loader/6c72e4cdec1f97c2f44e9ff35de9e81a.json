{"ast":null,"code":"import _slicedToArray from \"/Users/nanang/neo4J/tuas/web-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useIsFocusVisible as useIsFocusVisible, unstable_useEnhancedEffect as useEnhancedEffect, unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventCallback, unstable_useForkRef as useForkRef, unstable_useControlled as useControlled, visuallyHidden } from '@mui/utils';\nconst INTENTIONAL_DRAG_COUNT_THRESHOLD = 2;\n\nfunction asc(a, b) {\n  return a - b;\n}\n\nfunction clamp(value, min, max) {\n  if (value == null) {\n    return min;\n  }\n\n  return Math.min(Math.max(min, value), max);\n}\n\nfunction findClosest(values, currentValue) {\n  var _values$reduce;\n\n  const _ref = (_values$reduce = values.reduce((acc, value, index) => {\n    const distance = Math.abs(currentValue - value);\n\n    if (acc === null || distance < acc.distance || distance === acc.distance) {\n      return {\n        distance,\n        index\n      };\n    }\n\n    return acc;\n  }, null)) != null ? _values$reduce : {},\n        closestIndex = _ref.index;\n\n  return closestIndex;\n}\n\nfunction trackFinger(event, touchId) {\n  // The event is TouchEvent\n  if (touchId.current !== undefined && event.changedTouches) {\n    const touchEvent = event;\n\n    for (let i = 0; i < touchEvent.changedTouches.length; i += 1) {\n      const touch = touchEvent.changedTouches[i];\n\n      if (touch.identifier === touchId.current) {\n        return {\n          x: touch.clientX,\n          y: touch.clientY\n        };\n      }\n    }\n\n    return false;\n  } // The event is MouseEvent\n\n\n  return {\n    x: event.clientX,\n    y: event.clientY\n  };\n}\n\nexport function valueToPercent(value, min, max) {\n  return (value - min) * 100 / (max - min);\n}\n\nfunction percentToValue(percent, min, max) {\n  return (max - min) * percent + min;\n}\n\nfunction getDecimalPrecision(num) {\n  // This handles the case when num is very small (0.00000001), js will turn this into 1e-8.\n  // When num is bigger than 1 or less than -1 it won't get converted to this notation so it's fine.\n  if (Math.abs(num) < 1) {\n    const parts = num.toExponential().split('e-');\n    const matissaDecimalPart = parts[0].split('.')[1];\n    return (matissaDecimalPart ? matissaDecimalPart.length : 0) + parseInt(parts[1], 10);\n  }\n\n  const decimalPart = num.toString().split('.')[1];\n  return decimalPart ? decimalPart.length : 0;\n}\n\nfunction roundValueToStep(value, step, min) {\n  const nearest = Math.round((value - min) / step) * step + min;\n  return Number(nearest.toFixed(getDecimalPrecision(step)));\n}\n\nfunction setValueIndex({\n  values,\n  newValue,\n  index\n}) {\n  const output = values.slice();\n  output[index] = newValue;\n  return output.sort(asc);\n}\n\nfunction focusThumb({\n  sliderRef,\n  activeIndex,\n  setActive\n}) {\n  var _sliderRef$current, _doc$activeElement;\n\n  const doc = ownerDocument(sliderRef.current);\n\n  if (!((_sliderRef$current = sliderRef.current) != null && _sliderRef$current.contains(doc.activeElement)) || Number(doc == null ? void 0 : (_doc$activeElement = doc.activeElement) == null ? void 0 : _doc$activeElement.getAttribute('data-index')) !== activeIndex) {\n    var _sliderRef$current2;\n\n    (_sliderRef$current2 = sliderRef.current) == null ? void 0 : _sliderRef$current2.querySelector(\"[type=\\\"range\\\"][data-index=\\\"\".concat(activeIndex, \"\\\"]\")).focus();\n  }\n\n  if (setActive) {\n    setActive(activeIndex);\n  }\n}\n\nconst axisProps = {\n  horizontal: {\n    offset: percent => ({\n      left: \"\".concat(percent, \"%\")\n    }),\n    leap: percent => ({\n      width: \"\".concat(percent, \"%\")\n    })\n  },\n  'horizontal-reverse': {\n    offset: percent => ({\n      right: \"\".concat(percent, \"%\")\n    }),\n    leap: percent => ({\n      width: \"\".concat(percent, \"%\")\n    })\n  },\n  vertical: {\n    offset: percent => ({\n      bottom: \"\".concat(percent, \"%\")\n    }),\n    leap: percent => ({\n      height: \"\".concat(percent, \"%\")\n    })\n  }\n};\nexport const Identity = x => x; // TODO: remove support for Safari < 13.\n// https://caniuse.com/#search=touch-action\n//\n// Safari, on iOS, supports touch action since v13.\n// Over 80% of the iOS phones are compatible\n// in August 2020.\n// Utilizing the CSS.supports method to check if touch-action is supported.\n// Since CSS.supports is supported on all but Edge@12 and IE and touch-action\n// is supported on both Edge@12 and IE if CSS.supports is not available that means that\n// touch-action will be supported\n\nlet cachedSupportsTouchActionNone;\n\nfunction doesSupportTouchActionNone() {\n  if (cachedSupportsTouchActionNone === undefined) {\n    if (typeof CSS !== 'undefined' && typeof CSS.supports === 'function') {\n      cachedSupportsTouchActionNone = CSS.supports('touch-action', 'none');\n    } else {\n      cachedSupportsTouchActionNone = true;\n    }\n  }\n\n  return cachedSupportsTouchActionNone;\n}\n\nexport default function useSlider(parameters) {\n  const ariaLabelledby = parameters['aria-labelledby'],\n        defaultValue = parameters.defaultValue,\n        _parameters$disabled = parameters.disabled,\n        disabled = _parameters$disabled === void 0 ? false : _parameters$disabled,\n        _parameters$disableSw = parameters.disableSwap,\n        disableSwap = _parameters$disableSw === void 0 ? false : _parameters$disableSw,\n        _parameters$isRtl = parameters.isRtl,\n        isRtl = _parameters$isRtl === void 0 ? false : _parameters$isRtl,\n        _parameters$marks = parameters.marks,\n        marksProp = _parameters$marks === void 0 ? false : _parameters$marks,\n        _parameters$max = parameters.max,\n        max = _parameters$max === void 0 ? 100 : _parameters$max,\n        _parameters$min = parameters.min,\n        min = _parameters$min === void 0 ? 0 : _parameters$min,\n        name = parameters.name,\n        onChange = parameters.onChange,\n        onChangeCommitted = parameters.onChangeCommitted,\n        _parameters$orientati = parameters.orientation,\n        orientation = _parameters$orientati === void 0 ? 'horizontal' : _parameters$orientati,\n        ref = parameters.ref,\n        _parameters$scale = parameters.scale,\n        scale = _parameters$scale === void 0 ? Identity : _parameters$scale,\n        _parameters$step2 = parameters.step,\n        step = _parameters$step2 === void 0 ? 1 : _parameters$step2,\n        tabIndex = parameters.tabIndex,\n        valueProp = parameters.value;\n  const touchId = React.useRef(); // We can't use the :active browser pseudo-classes.\n  // - The active state isn't triggered when clicking on the rail.\n  // - The active state isn't transferred when inversing a range slider.\n\n  const _React$useState = React.useState(-1),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        active = _React$useState2[0],\n        setActive = _React$useState2[1];\n\n  const _React$useState3 = React.useState(-1),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        open = _React$useState4[0],\n        setOpen = _React$useState4[1];\n\n  const _React$useState5 = React.useState(false),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        dragging = _React$useState6[0],\n        setDragging = _React$useState6[1];\n\n  const moveCount = React.useRef(0);\n\n  const _useControlled = useControlled({\n    controlled: valueProp,\n    default: defaultValue != null ? defaultValue : min,\n    name: 'Slider'\n  }),\n        _useControlled2 = _slicedToArray(_useControlled, 2),\n        valueDerived = _useControlled2[0],\n        setValueState = _useControlled2[1];\n\n  const handleChange = onChange && ((event, value, thumbIndex) => {\n    // Redefine target to allow name and value to be read.\n    // This allows seamless integration with the most popular form libraries.\n    // https://github.com/mui/material-ui/issues/13485#issuecomment-676048492\n    // Clone the event to not override `target` of the original event.\n    const nativeEvent = event.nativeEvent || event; // @ts-ignore The nativeEvent is function, not object\n\n    const clonedEvent = new nativeEvent.constructor(nativeEvent.type, nativeEvent);\n    Object.defineProperty(clonedEvent, 'target', {\n      writable: true,\n      value: {\n        value,\n        name\n      }\n    });\n    onChange(clonedEvent, value, thumbIndex);\n  });\n\n  const range = Array.isArray(valueDerived);\n  let values = range ? valueDerived.slice().sort(asc) : [valueDerived];\n  values = values.map(value => clamp(value, min, max));\n  const marks = marksProp === true && step !== null ? [...Array(Math.floor((max - min) / step) + 1)].map((_, index) => ({\n    value: min + step * index\n  })) : marksProp || [];\n  const marksValues = marks.map(mark => mark.value);\n\n  const _useIsFocusVisible = useIsFocusVisible(),\n        isFocusVisibleRef = _useIsFocusVisible.isFocusVisibleRef,\n        handleBlurVisible = _useIsFocusVisible.onBlur,\n        handleFocusVisible = _useIsFocusVisible.onFocus,\n        focusVisibleRef = _useIsFocusVisible.ref;\n\n  const _React$useState7 = React.useState(-1),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        focusedThumbIndex = _React$useState8[0],\n        setFocusedThumbIndex = _React$useState8[1];\n\n  const sliderRef = React.useRef();\n  const handleFocusRef = useForkRef(focusVisibleRef, sliderRef);\n  const handleRef = useForkRef(ref, handleFocusRef);\n\n  const createHandleHiddenInputFocus = otherHandlers => event => {\n    var _otherHandlers$onFocu;\n\n    const index = Number(event.currentTarget.getAttribute('data-index'));\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setFocusedThumbIndex(index);\n    }\n\n    setOpen(index);\n    otherHandlers == null ? void 0 : (_otherHandlers$onFocu = otherHandlers.onFocus) == null ? void 0 : _otherHandlers$onFocu.call(otherHandlers, event);\n  };\n\n  const createHandleHiddenInputBlur = otherHandlers => event => {\n    var _otherHandlers$onBlur;\n\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusedThumbIndex(-1);\n    }\n\n    setOpen(-1);\n    otherHandlers == null ? void 0 : (_otherHandlers$onBlur = otherHandlers.onBlur) == null ? void 0 : _otherHandlers$onBlur.call(otherHandlers, event);\n  };\n\n  useEnhancedEffect(() => {\n    if (disabled && sliderRef.current.contains(document.activeElement)) {\n      var _document$activeEleme; // This is necessary because Firefox and Safari will keep focus\n      // on a disabled element:\n      // https://codesandbox.io/s/mui-pr-22247-forked-h151h?file=/src/App.js\n      // @ts-ignore\n\n\n      (_document$activeEleme = document.activeElement) == null ? void 0 : _document$activeEleme.blur();\n    }\n  }, [disabled]);\n\n  if (disabled && active !== -1) {\n    setActive(-1);\n  }\n\n  if (disabled && focusedThumbIndex !== -1) {\n    setFocusedThumbIndex(-1);\n  }\n\n  const createHandleHiddenInputChange = otherHandlers => event => {\n    var _otherHandlers$onChan;\n\n    (_otherHandlers$onChan = otherHandlers.onChange) == null ? void 0 : _otherHandlers$onChan.call(otherHandlers, event);\n    const index = Number(event.currentTarget.getAttribute('data-index'));\n    const value = values[index];\n    const marksIndex = marksValues.indexOf(value); // @ts-ignore\n\n    let newValue = event.target.valueAsNumber;\n\n    if (marks && step == null) {\n      newValue = newValue < value ? marksValues[marksIndex - 1] : marksValues[marksIndex + 1];\n    }\n\n    newValue = clamp(newValue, min, max);\n\n    if (marks && step == null) {\n      const currentMarkIndex = marksValues.indexOf(values[index]);\n      newValue = newValue < values[index] ? marksValues[currentMarkIndex - 1] : marksValues[currentMarkIndex + 1];\n    }\n\n    if (range) {\n      // Bound the new value to the thumb's neighbours.\n      if (disableSwap) {\n        newValue = clamp(newValue, values[index - 1] || -Infinity, values[index + 1] || Infinity);\n      }\n\n      const previousValue = newValue;\n      newValue = setValueIndex({\n        values,\n        newValue,\n        index\n      });\n      let activeIndex = index; // Potentially swap the index if needed.\n\n      if (!disableSwap) {\n        activeIndex = newValue.indexOf(previousValue);\n      }\n\n      focusThumb({\n        sliderRef,\n        activeIndex\n      });\n    }\n\n    setValueState(newValue);\n    setFocusedThumbIndex(index);\n\n    if (handleChange) {\n      handleChange(event, newValue, index);\n    }\n\n    if (onChangeCommitted) {\n      onChangeCommitted(event, newValue);\n    }\n  };\n\n  const previousIndex = React.useRef();\n  let axis = orientation;\n\n  if (isRtl && orientation === 'horizontal') {\n    axis += '-reverse';\n  }\n\n  const getFingerNewValue = ({\n    finger,\n    move = false,\n    values: values2\n  }) => {\n    const slider = sliderRef.current;\n\n    const _slider$getBoundingCl = slider.getBoundingClientRect(),\n          width = _slider$getBoundingCl.width,\n          height = _slider$getBoundingCl.height,\n          bottom = _slider$getBoundingCl.bottom,\n          left = _slider$getBoundingCl.left;\n\n    let percent;\n\n    if (axis.indexOf('vertical') === 0) {\n      percent = (bottom - finger.y) / height;\n    } else {\n      percent = (finger.x - left) / width;\n    }\n\n    if (axis.indexOf('-reverse') !== -1) {\n      percent = 1 - percent;\n    }\n\n    let newValue;\n    newValue = percentToValue(percent, min, max);\n\n    if (step) {\n      newValue = roundValueToStep(newValue, step, min);\n    } else {\n      const closestIndex = findClosest(marksValues, newValue);\n      newValue = marksValues[closestIndex];\n    }\n\n    newValue = clamp(newValue, min, max);\n    let activeIndex = 0;\n\n    if (range) {\n      if (!move) {\n        activeIndex = findClosest(values2, newValue);\n      } else {\n        activeIndex = previousIndex.current;\n      } // Bound the new value to the thumb's neighbours.\n\n\n      if (disableSwap) {\n        newValue = clamp(newValue, values2[activeIndex - 1] || -Infinity, values2[activeIndex + 1] || Infinity);\n      }\n\n      const previousValue = newValue;\n      newValue = setValueIndex({\n        values: values2,\n        newValue,\n        index: activeIndex\n      }); // Potentially swap the index if needed.\n\n      if (!(disableSwap && move)) {\n        activeIndex = newValue.indexOf(previousValue);\n        previousIndex.current = activeIndex;\n      }\n    }\n\n    return {\n      newValue,\n      activeIndex\n    };\n  };\n\n  const handleTouchMove = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId);\n\n    if (!finger) {\n      return;\n    }\n\n    moveCount.current += 1; // Cancel move in case some other element consumed a mouseup event and it was not fired.\n    // @ts-ignore buttons doesn't not exists on touch event\n\n    if (nativeEvent.type === 'mousemove' && nativeEvent.buttons === 0) {\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      handleTouchEnd(nativeEvent);\n      return;\n    }\n\n    const _getFingerNewValue = getFingerNewValue({\n      finger,\n      move: true,\n      values\n    }),\n          newValue = _getFingerNewValue.newValue,\n          activeIndex = _getFingerNewValue.activeIndex;\n\n    focusThumb({\n      sliderRef,\n      activeIndex,\n      setActive\n    });\n    setValueState(newValue);\n\n    if (!dragging && moveCount.current > INTENTIONAL_DRAG_COUNT_THRESHOLD) {\n      setDragging(true);\n    }\n\n    if (handleChange) {\n      handleChange(nativeEvent, newValue, activeIndex);\n    }\n  });\n  const handleTouchEnd = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId);\n    setDragging(false);\n\n    if (!finger) {\n      return;\n    }\n\n    const _getFingerNewValue2 = getFingerNewValue({\n      finger,\n      move: true,\n      values\n    }),\n          newValue = _getFingerNewValue2.newValue;\n\n    setActive(-1);\n\n    if (nativeEvent.type === 'touchend') {\n      setOpen(-1);\n    }\n\n    if (onChangeCommitted) {\n      onChangeCommitted(nativeEvent, newValue);\n    }\n\n    touchId.current = undefined; // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n    stopListening();\n  });\n  const handleTouchStart = useEventCallback(nativeEvent => {\n    if (disabled) {\n      return;\n    } // If touch-action: none; is not supported we need to prevent the scroll manually.\n\n\n    if (!doesSupportTouchActionNone()) {\n      nativeEvent.preventDefault();\n    }\n\n    const touch = nativeEvent.changedTouches[0];\n\n    if (touch != null) {\n      // A number that uniquely identifies the current finger in the touch session.\n      touchId.current = touch.identifier;\n    }\n\n    const finger = trackFinger(nativeEvent, touchId);\n\n    if (finger !== false) {\n      const _getFingerNewValue3 = getFingerNewValue({\n        finger,\n        values\n      }),\n            newValue = _getFingerNewValue3.newValue,\n            activeIndex = _getFingerNewValue3.activeIndex;\n\n      focusThumb({\n        sliderRef,\n        activeIndex,\n        setActive\n      });\n      setValueState(newValue);\n\n      if (handleChange) {\n        handleChange(nativeEvent, newValue, activeIndex);\n      }\n    }\n\n    moveCount.current = 0;\n    const doc = ownerDocument(sliderRef.current);\n    doc.addEventListener('touchmove', handleTouchMove);\n    doc.addEventListener('touchend', handleTouchEnd);\n  });\n  const stopListening = React.useCallback(() => {\n    const doc = ownerDocument(sliderRef.current);\n    doc.removeEventListener('mousemove', handleTouchMove);\n    doc.removeEventListener('mouseup', handleTouchEnd);\n    doc.removeEventListener('touchmove', handleTouchMove);\n    doc.removeEventListener('touchend', handleTouchEnd);\n  }, [handleTouchEnd, handleTouchMove]);\n  React.useEffect(() => {\n    const slider = sliderRef.current;\n    slider.addEventListener('touchstart', handleTouchStart, {\n      passive: doesSupportTouchActionNone()\n    });\n    return () => {\n      // @ts-ignore\n      slider.removeEventListener('touchstart', handleTouchStart, {\n        passive: doesSupportTouchActionNone()\n      });\n      stopListening();\n    };\n  }, [stopListening, handleTouchStart]);\n  React.useEffect(() => {\n    if (disabled) {\n      stopListening();\n    }\n  }, [disabled, stopListening]);\n\n  const createHandleMouseDown = otherHandlers => event => {\n    var _otherHandlers$onMous;\n\n    (_otherHandlers$onMous = otherHandlers.onMouseDown) == null ? void 0 : _otherHandlers$onMous.call(otherHandlers, event);\n\n    if (disabled) {\n      return;\n    }\n\n    if (event.defaultPrevented) {\n      return;\n    } // Only handle left clicks\n\n\n    if (event.button !== 0) {\n      return;\n    } // Avoid text selection\n\n\n    event.preventDefault();\n    const finger = trackFinger(event, touchId);\n\n    if (finger !== false) {\n      const _getFingerNewValue4 = getFingerNewValue({\n        finger,\n        values\n      }),\n            newValue = _getFingerNewValue4.newValue,\n            activeIndex = _getFingerNewValue4.activeIndex;\n\n      focusThumb({\n        sliderRef,\n        activeIndex,\n        setActive\n      });\n      setValueState(newValue);\n\n      if (handleChange) {\n        handleChange(event, newValue, activeIndex);\n      }\n    }\n\n    moveCount.current = 0;\n    const doc = ownerDocument(sliderRef.current);\n    doc.addEventListener('mousemove', handleTouchMove);\n    doc.addEventListener('mouseup', handleTouchEnd);\n  };\n\n  const trackOffset = valueToPercent(range ? values[0] : min, min, max);\n  const trackLeap = valueToPercent(values[values.length - 1], min, max) - trackOffset;\n\n  const getRootProps = (otherHandlers = {}) => {\n    const ownEventHandlers = {\n      onMouseDown: createHandleMouseDown(otherHandlers || {})\n    };\n\n    const mergedEventHandlers = _extends({}, otherHandlers, ownEventHandlers);\n\n    return _extends({\n      ref: handleRef\n    }, mergedEventHandlers);\n  };\n\n  const createHandleMouseOver = otherHandlers => event => {\n    var _otherHandlers$onMous2;\n\n    (_otherHandlers$onMous2 = otherHandlers.onMouseOver) == null ? void 0 : _otherHandlers$onMous2.call(otherHandlers, event);\n    const index = Number(event.currentTarget.getAttribute('data-index'));\n    setOpen(index);\n  };\n\n  const createHandleMouseLeave = otherHandlers => event => {\n    var _otherHandlers$onMous3;\n\n    (_otherHandlers$onMous3 = otherHandlers.onMouseLeave) == null ? void 0 : _otherHandlers$onMous3.call(otherHandlers, event);\n    setOpen(-1);\n  };\n\n  const getThumbProps = (otherHandlers = {}) => {\n    const ownEventHandlers = {\n      onMouseOver: createHandleMouseOver(otherHandlers || {}),\n      onMouseLeave: createHandleMouseLeave(otherHandlers || {})\n    };\n    return _extends({}, otherHandlers, ownEventHandlers);\n  };\n\n  const getHiddenInputProps = (otherHandlers = {}) => {\n    var _parameters$step;\n\n    const ownEventHandlers = {\n      onChange: createHandleHiddenInputChange(otherHandlers || {}),\n      onFocus: createHandleHiddenInputFocus(otherHandlers || {}),\n      onBlur: createHandleHiddenInputBlur(otherHandlers || {})\n    };\n\n    const mergedEventHandlers = _extends({}, otherHandlers, ownEventHandlers);\n\n    return _extends({\n      tabIndex,\n      'aria-labelledby': ariaLabelledby,\n      'aria-orientation': orientation,\n      'aria-valuemax': scale(max),\n      'aria-valuemin': scale(min),\n      name,\n      type: 'range',\n      min: parameters.min,\n      max: parameters.max,\n      step: (_parameters$step = parameters.step) != null ? _parameters$step : undefined,\n      disabled\n    }, mergedEventHandlers, {\n      style: _extends({}, visuallyHidden, {\n        direction: isRtl ? 'rtl' : 'ltr',\n        // So that VoiceOver's focus indicator matches the thumb's dimensions\n        width: '100%',\n        height: '100%'\n      })\n    });\n  };\n\n  return {\n    active,\n    axis: axis,\n    axisProps,\n    dragging,\n    focusedThumbIndex,\n    getHiddenInputProps,\n    getRootProps,\n    getThumbProps,\n    marks: marks,\n    open,\n    range,\n    trackLeap,\n    trackOffset,\n    values\n  };\n}","map":{"version":3,"sources":["/Users/nanang/neo4J/tuas/web-react/node_modules/@mui/base/SliderUnstyled/useSlider.js"],"names":["_extends","React","unstable_useIsFocusVisible","useIsFocusVisible","unstable_useEnhancedEffect","useEnhancedEffect","unstable_ownerDocument","ownerDocument","unstable_useEventCallback","useEventCallback","unstable_useForkRef","useForkRef","unstable_useControlled","useControlled","visuallyHidden","INTENTIONAL_DRAG_COUNT_THRESHOLD","asc","a","b","clamp","value","min","max","Math","findClosest","values","currentValue","_values$reduce","reduce","acc","index","distance","abs","closestIndex","trackFinger","event","touchId","current","undefined","changedTouches","touchEvent","i","length","touch","identifier","x","clientX","y","clientY","valueToPercent","percentToValue","percent","getDecimalPrecision","num","parts","toExponential","split","matissaDecimalPart","parseInt","decimalPart","toString","roundValueToStep","step","nearest","round","Number","toFixed","setValueIndex","newValue","output","slice","sort","focusThumb","sliderRef","activeIndex","setActive","_sliderRef$current","_doc$activeElement","doc","contains","activeElement","getAttribute","_sliderRef$current2","querySelector","focus","axisProps","horizontal","offset","left","leap","width","right","vertical","bottom","height","Identity","cachedSupportsTouchActionNone","doesSupportTouchActionNone","CSS","supports","useSlider","parameters","ariaLabelledby","defaultValue","disabled","disableSwap","isRtl","marks","marksProp","name","onChange","onChangeCommitted","orientation","ref","scale","tabIndex","valueProp","useRef","useState","active","open","setOpen","dragging","setDragging","moveCount","controlled","default","valueDerived","setValueState","handleChange","thumbIndex","nativeEvent","clonedEvent","constructor","type","Object","defineProperty","writable","range","Array","isArray","map","floor","_","marksValues","mark","isFocusVisibleRef","handleBlurVisible","onBlur","handleFocusVisible","onFocus","focusVisibleRef","focusedThumbIndex","setFocusedThumbIndex","handleFocusRef","handleRef","createHandleHiddenInputFocus","otherHandlers","_otherHandlers$onFocu","currentTarget","call","createHandleHiddenInputBlur","_otherHandlers$onBlur","document","_document$activeEleme","blur","createHandleHiddenInputChange","_otherHandlers$onChan","marksIndex","indexOf","target","valueAsNumber","currentMarkIndex","Infinity","previousValue","previousIndex","axis","getFingerNewValue","finger","move","values2","slider","getBoundingClientRect","handleTouchMove","buttons","handleTouchEnd","stopListening","handleTouchStart","preventDefault","addEventListener","useCallback","removeEventListener","useEffect","passive","createHandleMouseDown","_otherHandlers$onMous","onMouseDown","defaultPrevented","button","trackOffset","trackLeap","getRootProps","ownEventHandlers","mergedEventHandlers","createHandleMouseOver","_otherHandlers$onMous2","onMouseOver","createHandleMouseLeave","_otherHandlers$onMous3","onMouseLeave","getThumbProps","getHiddenInputProps","_parameters$step","style","direction"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useIsFocusVisible as useIsFocusVisible, unstable_useEnhancedEffect as useEnhancedEffect, unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventCallback, unstable_useForkRef as useForkRef, unstable_useControlled as useControlled, visuallyHidden } from '@mui/utils';\nconst INTENTIONAL_DRAG_COUNT_THRESHOLD = 2;\n\nfunction asc(a, b) {\n  return a - b;\n}\n\nfunction clamp(value, min, max) {\n  if (value == null) {\n    return min;\n  }\n\n  return Math.min(Math.max(min, value), max);\n}\n\nfunction findClosest(values, currentValue) {\n  var _values$reduce;\n\n  const {\n    index: closestIndex\n  } = (_values$reduce = values.reduce((acc, value, index) => {\n    const distance = Math.abs(currentValue - value);\n\n    if (acc === null || distance < acc.distance || distance === acc.distance) {\n      return {\n        distance,\n        index\n      };\n    }\n\n    return acc;\n  }, null)) != null ? _values$reduce : {};\n  return closestIndex;\n}\n\nfunction trackFinger(event, touchId) {\n  // The event is TouchEvent\n  if (touchId.current !== undefined && event.changedTouches) {\n    const touchEvent = event;\n\n    for (let i = 0; i < touchEvent.changedTouches.length; i += 1) {\n      const touch = touchEvent.changedTouches[i];\n\n      if (touch.identifier === touchId.current) {\n        return {\n          x: touch.clientX,\n          y: touch.clientY\n        };\n      }\n    }\n\n    return false;\n  } // The event is MouseEvent\n\n\n  return {\n    x: event.clientX,\n    y: event.clientY\n  };\n}\n\nexport function valueToPercent(value, min, max) {\n  return (value - min) * 100 / (max - min);\n}\n\nfunction percentToValue(percent, min, max) {\n  return (max - min) * percent + min;\n}\n\nfunction getDecimalPrecision(num) {\n  // This handles the case when num is very small (0.00000001), js will turn this into 1e-8.\n  // When num is bigger than 1 or less than -1 it won't get converted to this notation so it's fine.\n  if (Math.abs(num) < 1) {\n    const parts = num.toExponential().split('e-');\n    const matissaDecimalPart = parts[0].split('.')[1];\n    return (matissaDecimalPart ? matissaDecimalPart.length : 0) + parseInt(parts[1], 10);\n  }\n\n  const decimalPart = num.toString().split('.')[1];\n  return decimalPart ? decimalPart.length : 0;\n}\n\nfunction roundValueToStep(value, step, min) {\n  const nearest = Math.round((value - min) / step) * step + min;\n  return Number(nearest.toFixed(getDecimalPrecision(step)));\n}\n\nfunction setValueIndex({\n  values,\n  newValue,\n  index\n}) {\n  const output = values.slice();\n  output[index] = newValue;\n  return output.sort(asc);\n}\n\nfunction focusThumb({\n  sliderRef,\n  activeIndex,\n  setActive\n}) {\n  var _sliderRef$current, _doc$activeElement;\n\n  const doc = ownerDocument(sliderRef.current);\n\n  if (!((_sliderRef$current = sliderRef.current) != null && _sliderRef$current.contains(doc.activeElement)) || Number(doc == null ? void 0 : (_doc$activeElement = doc.activeElement) == null ? void 0 : _doc$activeElement.getAttribute('data-index')) !== activeIndex) {\n    var _sliderRef$current2;\n\n    (_sliderRef$current2 = sliderRef.current) == null ? void 0 : _sliderRef$current2.querySelector(`[type=\"range\"][data-index=\"${activeIndex}\"]`).focus();\n  }\n\n  if (setActive) {\n    setActive(activeIndex);\n  }\n}\n\nconst axisProps = {\n  horizontal: {\n    offset: percent => ({\n      left: `${percent}%`\n    }),\n    leap: percent => ({\n      width: `${percent}%`\n    })\n  },\n  'horizontal-reverse': {\n    offset: percent => ({\n      right: `${percent}%`\n    }),\n    leap: percent => ({\n      width: `${percent}%`\n    })\n  },\n  vertical: {\n    offset: percent => ({\n      bottom: `${percent}%`\n    }),\n    leap: percent => ({\n      height: `${percent}%`\n    })\n  }\n};\nexport const Identity = x => x; // TODO: remove support for Safari < 13.\n// https://caniuse.com/#search=touch-action\n//\n// Safari, on iOS, supports touch action since v13.\n// Over 80% of the iOS phones are compatible\n// in August 2020.\n// Utilizing the CSS.supports method to check if touch-action is supported.\n// Since CSS.supports is supported on all but Edge@12 and IE and touch-action\n// is supported on both Edge@12 and IE if CSS.supports is not available that means that\n// touch-action will be supported\n\nlet cachedSupportsTouchActionNone;\n\nfunction doesSupportTouchActionNone() {\n  if (cachedSupportsTouchActionNone === undefined) {\n    if (typeof CSS !== 'undefined' && typeof CSS.supports === 'function') {\n      cachedSupportsTouchActionNone = CSS.supports('touch-action', 'none');\n    } else {\n      cachedSupportsTouchActionNone = true;\n    }\n  }\n\n  return cachedSupportsTouchActionNone;\n}\n\nexport default function useSlider(parameters) {\n  const {\n    'aria-labelledby': ariaLabelledby,\n    defaultValue,\n    disabled = false,\n    disableSwap = false,\n    isRtl = false,\n    marks: marksProp = false,\n    max = 100,\n    min = 0,\n    name,\n    onChange,\n    onChangeCommitted,\n    orientation = 'horizontal',\n    ref,\n    scale = Identity,\n    step = 1,\n    tabIndex,\n    value: valueProp\n  } = parameters;\n  const touchId = React.useRef(); // We can't use the :active browser pseudo-classes.\n  // - The active state isn't triggered when clicking on the rail.\n  // - The active state isn't transferred when inversing a range slider.\n\n  const [active, setActive] = React.useState(-1);\n  const [open, setOpen] = React.useState(-1);\n  const [dragging, setDragging] = React.useState(false);\n  const moveCount = React.useRef(0);\n  const [valueDerived, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue != null ? defaultValue : min,\n    name: 'Slider'\n  });\n\n  const handleChange = onChange && ((event, value, thumbIndex) => {\n    // Redefine target to allow name and value to be read.\n    // This allows seamless integration with the most popular form libraries.\n    // https://github.com/mui/material-ui/issues/13485#issuecomment-676048492\n    // Clone the event to not override `target` of the original event.\n    const nativeEvent = event.nativeEvent || event; // @ts-ignore The nativeEvent is function, not object\n\n    const clonedEvent = new nativeEvent.constructor(nativeEvent.type, nativeEvent);\n    Object.defineProperty(clonedEvent, 'target', {\n      writable: true,\n      value: {\n        value,\n        name\n      }\n    });\n    onChange(clonedEvent, value, thumbIndex);\n  });\n\n  const range = Array.isArray(valueDerived);\n  let values = range ? valueDerived.slice().sort(asc) : [valueDerived];\n  values = values.map(value => clamp(value, min, max));\n  const marks = marksProp === true && step !== null ? [...Array(Math.floor((max - min) / step) + 1)].map((_, index) => ({\n    value: min + step * index\n  })) : marksProp || [];\n  const marksValues = marks.map(mark => mark.value);\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusedThumbIndex, setFocusedThumbIndex] = React.useState(-1);\n  const sliderRef = React.useRef();\n  const handleFocusRef = useForkRef(focusVisibleRef, sliderRef);\n  const handleRef = useForkRef(ref, handleFocusRef);\n\n  const createHandleHiddenInputFocus = otherHandlers => event => {\n    var _otherHandlers$onFocu;\n\n    const index = Number(event.currentTarget.getAttribute('data-index'));\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setFocusedThumbIndex(index);\n    }\n\n    setOpen(index);\n    otherHandlers == null ? void 0 : (_otherHandlers$onFocu = otherHandlers.onFocus) == null ? void 0 : _otherHandlers$onFocu.call(otherHandlers, event);\n  };\n\n  const createHandleHiddenInputBlur = otherHandlers => event => {\n    var _otherHandlers$onBlur;\n\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusedThumbIndex(-1);\n    }\n\n    setOpen(-1);\n    otherHandlers == null ? void 0 : (_otherHandlers$onBlur = otherHandlers.onBlur) == null ? void 0 : _otherHandlers$onBlur.call(otherHandlers, event);\n  };\n\n  useEnhancedEffect(() => {\n    if (disabled && sliderRef.current.contains(document.activeElement)) {\n      var _document$activeEleme;\n\n      // This is necessary because Firefox and Safari will keep focus\n      // on a disabled element:\n      // https://codesandbox.io/s/mui-pr-22247-forked-h151h?file=/src/App.js\n      // @ts-ignore\n      (_document$activeEleme = document.activeElement) == null ? void 0 : _document$activeEleme.blur();\n    }\n  }, [disabled]);\n\n  if (disabled && active !== -1) {\n    setActive(-1);\n  }\n\n  if (disabled && focusedThumbIndex !== -1) {\n    setFocusedThumbIndex(-1);\n  }\n\n  const createHandleHiddenInputChange = otherHandlers => event => {\n    var _otherHandlers$onChan;\n\n    (_otherHandlers$onChan = otherHandlers.onChange) == null ? void 0 : _otherHandlers$onChan.call(otherHandlers, event);\n    const index = Number(event.currentTarget.getAttribute('data-index'));\n    const value = values[index];\n    const marksIndex = marksValues.indexOf(value); // @ts-ignore\n\n    let newValue = event.target.valueAsNumber;\n\n    if (marks && step == null) {\n      newValue = newValue < value ? marksValues[marksIndex - 1] : marksValues[marksIndex + 1];\n    }\n\n    newValue = clamp(newValue, min, max);\n\n    if (marks && step == null) {\n      const currentMarkIndex = marksValues.indexOf(values[index]);\n      newValue = newValue < values[index] ? marksValues[currentMarkIndex - 1] : marksValues[currentMarkIndex + 1];\n    }\n\n    if (range) {\n      // Bound the new value to the thumb's neighbours.\n      if (disableSwap) {\n        newValue = clamp(newValue, values[index - 1] || -Infinity, values[index + 1] || Infinity);\n      }\n\n      const previousValue = newValue;\n      newValue = setValueIndex({\n        values,\n        newValue,\n        index\n      });\n      let activeIndex = index; // Potentially swap the index if needed.\n\n      if (!disableSwap) {\n        activeIndex = newValue.indexOf(previousValue);\n      }\n\n      focusThumb({\n        sliderRef,\n        activeIndex\n      });\n    }\n\n    setValueState(newValue);\n    setFocusedThumbIndex(index);\n\n    if (handleChange) {\n      handleChange(event, newValue, index);\n    }\n\n    if (onChangeCommitted) {\n      onChangeCommitted(event, newValue);\n    }\n  };\n\n  const previousIndex = React.useRef();\n  let axis = orientation;\n\n  if (isRtl && orientation === 'horizontal') {\n    axis += '-reverse';\n  }\n\n  const getFingerNewValue = ({\n    finger,\n    move = false,\n    values: values2\n  }) => {\n    const {\n      current: slider\n    } = sliderRef;\n    const {\n      width,\n      height,\n      bottom,\n      left\n    } = slider.getBoundingClientRect();\n    let percent;\n\n    if (axis.indexOf('vertical') === 0) {\n      percent = (bottom - finger.y) / height;\n    } else {\n      percent = (finger.x - left) / width;\n    }\n\n    if (axis.indexOf('-reverse') !== -1) {\n      percent = 1 - percent;\n    }\n\n    let newValue;\n    newValue = percentToValue(percent, min, max);\n\n    if (step) {\n      newValue = roundValueToStep(newValue, step, min);\n    } else {\n      const closestIndex = findClosest(marksValues, newValue);\n      newValue = marksValues[closestIndex];\n    }\n\n    newValue = clamp(newValue, min, max);\n    let activeIndex = 0;\n\n    if (range) {\n      if (!move) {\n        activeIndex = findClosest(values2, newValue);\n      } else {\n        activeIndex = previousIndex.current;\n      } // Bound the new value to the thumb's neighbours.\n\n\n      if (disableSwap) {\n        newValue = clamp(newValue, values2[activeIndex - 1] || -Infinity, values2[activeIndex + 1] || Infinity);\n      }\n\n      const previousValue = newValue;\n      newValue = setValueIndex({\n        values: values2,\n        newValue,\n        index: activeIndex\n      }); // Potentially swap the index if needed.\n\n      if (!(disableSwap && move)) {\n        activeIndex = newValue.indexOf(previousValue);\n        previousIndex.current = activeIndex;\n      }\n    }\n\n    return {\n      newValue,\n      activeIndex\n    };\n  };\n\n  const handleTouchMove = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId);\n\n    if (!finger) {\n      return;\n    }\n\n    moveCount.current += 1; // Cancel move in case some other element consumed a mouseup event and it was not fired.\n    // @ts-ignore buttons doesn't not exists on touch event\n\n    if (nativeEvent.type === 'mousemove' && nativeEvent.buttons === 0) {\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      handleTouchEnd(nativeEvent);\n      return;\n    }\n\n    const {\n      newValue,\n      activeIndex\n    } = getFingerNewValue({\n      finger,\n      move: true,\n      values\n    });\n    focusThumb({\n      sliderRef,\n      activeIndex,\n      setActive\n    });\n    setValueState(newValue);\n\n    if (!dragging && moveCount.current > INTENTIONAL_DRAG_COUNT_THRESHOLD) {\n      setDragging(true);\n    }\n\n    if (handleChange) {\n      handleChange(nativeEvent, newValue, activeIndex);\n    }\n  });\n  const handleTouchEnd = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId);\n    setDragging(false);\n\n    if (!finger) {\n      return;\n    }\n\n    const {\n      newValue\n    } = getFingerNewValue({\n      finger,\n      move: true,\n      values\n    });\n    setActive(-1);\n\n    if (nativeEvent.type === 'touchend') {\n      setOpen(-1);\n    }\n\n    if (onChangeCommitted) {\n      onChangeCommitted(nativeEvent, newValue);\n    }\n\n    touchId.current = undefined; // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n    stopListening();\n  });\n  const handleTouchStart = useEventCallback(nativeEvent => {\n    if (disabled) {\n      return;\n    } // If touch-action: none; is not supported we need to prevent the scroll manually.\n\n\n    if (!doesSupportTouchActionNone()) {\n      nativeEvent.preventDefault();\n    }\n\n    const touch = nativeEvent.changedTouches[0];\n\n    if (touch != null) {\n      // A number that uniquely identifies the current finger in the touch session.\n      touchId.current = touch.identifier;\n    }\n\n    const finger = trackFinger(nativeEvent, touchId);\n\n    if (finger !== false) {\n      const {\n        newValue,\n        activeIndex\n      } = getFingerNewValue({\n        finger,\n        values\n      });\n      focusThumb({\n        sliderRef,\n        activeIndex,\n        setActive\n      });\n      setValueState(newValue);\n\n      if (handleChange) {\n        handleChange(nativeEvent, newValue, activeIndex);\n      }\n    }\n\n    moveCount.current = 0;\n    const doc = ownerDocument(sliderRef.current);\n    doc.addEventListener('touchmove', handleTouchMove);\n    doc.addEventListener('touchend', handleTouchEnd);\n  });\n  const stopListening = React.useCallback(() => {\n    const doc = ownerDocument(sliderRef.current);\n    doc.removeEventListener('mousemove', handleTouchMove);\n    doc.removeEventListener('mouseup', handleTouchEnd);\n    doc.removeEventListener('touchmove', handleTouchMove);\n    doc.removeEventListener('touchend', handleTouchEnd);\n  }, [handleTouchEnd, handleTouchMove]);\n  React.useEffect(() => {\n    const {\n      current: slider\n    } = sliderRef;\n    slider.addEventListener('touchstart', handleTouchStart, {\n      passive: doesSupportTouchActionNone()\n    });\n    return () => {\n      // @ts-ignore\n      slider.removeEventListener('touchstart', handleTouchStart, {\n        passive: doesSupportTouchActionNone()\n      });\n      stopListening();\n    };\n  }, [stopListening, handleTouchStart]);\n  React.useEffect(() => {\n    if (disabled) {\n      stopListening();\n    }\n  }, [disabled, stopListening]);\n\n  const createHandleMouseDown = otherHandlers => event => {\n    var _otherHandlers$onMous;\n\n    (_otherHandlers$onMous = otherHandlers.onMouseDown) == null ? void 0 : _otherHandlers$onMous.call(otherHandlers, event);\n\n    if (disabled) {\n      return;\n    }\n\n    if (event.defaultPrevented) {\n      return;\n    } // Only handle left clicks\n\n\n    if (event.button !== 0) {\n      return;\n    } // Avoid text selection\n\n\n    event.preventDefault();\n    const finger = trackFinger(event, touchId);\n\n    if (finger !== false) {\n      const {\n        newValue,\n        activeIndex\n      } = getFingerNewValue({\n        finger,\n        values\n      });\n      focusThumb({\n        sliderRef,\n        activeIndex,\n        setActive\n      });\n      setValueState(newValue);\n\n      if (handleChange) {\n        handleChange(event, newValue, activeIndex);\n      }\n    }\n\n    moveCount.current = 0;\n    const doc = ownerDocument(sliderRef.current);\n    doc.addEventListener('mousemove', handleTouchMove);\n    doc.addEventListener('mouseup', handleTouchEnd);\n  };\n\n  const trackOffset = valueToPercent(range ? values[0] : min, min, max);\n  const trackLeap = valueToPercent(values[values.length - 1], min, max) - trackOffset;\n\n  const getRootProps = (otherHandlers = {}) => {\n    const ownEventHandlers = {\n      onMouseDown: createHandleMouseDown(otherHandlers || {})\n    };\n\n    const mergedEventHandlers = _extends({}, otherHandlers, ownEventHandlers);\n\n    return _extends({\n      ref: handleRef\n    }, mergedEventHandlers);\n  };\n\n  const createHandleMouseOver = otherHandlers => event => {\n    var _otherHandlers$onMous2;\n\n    (_otherHandlers$onMous2 = otherHandlers.onMouseOver) == null ? void 0 : _otherHandlers$onMous2.call(otherHandlers, event);\n    const index = Number(event.currentTarget.getAttribute('data-index'));\n    setOpen(index);\n  };\n\n  const createHandleMouseLeave = otherHandlers => event => {\n    var _otherHandlers$onMous3;\n\n    (_otherHandlers$onMous3 = otherHandlers.onMouseLeave) == null ? void 0 : _otherHandlers$onMous3.call(otherHandlers, event);\n    setOpen(-1);\n  };\n\n  const getThumbProps = (otherHandlers = {}) => {\n    const ownEventHandlers = {\n      onMouseOver: createHandleMouseOver(otherHandlers || {}),\n      onMouseLeave: createHandleMouseLeave(otherHandlers || {})\n    };\n    return _extends({}, otherHandlers, ownEventHandlers);\n  };\n\n  const getHiddenInputProps = (otherHandlers = {}) => {\n    var _parameters$step;\n\n    const ownEventHandlers = {\n      onChange: createHandleHiddenInputChange(otherHandlers || {}),\n      onFocus: createHandleHiddenInputFocus(otherHandlers || {}),\n      onBlur: createHandleHiddenInputBlur(otherHandlers || {})\n    };\n\n    const mergedEventHandlers = _extends({}, otherHandlers, ownEventHandlers);\n\n    return _extends({\n      tabIndex,\n      'aria-labelledby': ariaLabelledby,\n      'aria-orientation': orientation,\n      'aria-valuemax': scale(max),\n      'aria-valuemin': scale(min),\n      name,\n      type: 'range',\n      min: parameters.min,\n      max: parameters.max,\n      step: (_parameters$step = parameters.step) != null ? _parameters$step : undefined,\n      disabled\n    }, mergedEventHandlers, {\n      style: _extends({}, visuallyHidden, {\n        direction: isRtl ? 'rtl' : 'ltr',\n        // So that VoiceOver's focus indicator matches the thumb's dimensions\n        width: '100%',\n        height: '100%'\n      })\n    });\n  };\n\n  return {\n    active,\n    axis: axis,\n    axisProps,\n    dragging,\n    focusedThumbIndex,\n    getHiddenInputProps,\n    getRootProps,\n    getThumbProps,\n    marks: marks,\n    open,\n    range,\n    trackLeap,\n    trackOffset,\n    values\n  };\n}"]},"metadata":{},"sourceType":"module"}