{"ast":null,"code":"var _jsxFileName = \"/Users/nanang/neo4J/tuas/web-react/src/components/sna/SentimentDataAnalytic.js\";\nimport React from 'react';\nimport { XYPlot, XAxis, YAxis, HorizontalGridLines, LineSeries, makeWidthFlexible, FlexibleWidthXYPlot, DiscreteColorLegend, VerticalGridLines, VerticalBarSeries } from 'react-vis';\nimport Title from '../Title';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport IconButton from '@material-ui/core/IconButton';\nimport { ChevronLeft as ChevronLeftIcon, Menu as MenuIcon, Dashboard as DashboardIcon, Assignment as AssignmentIcon, Twitter as TwitterIcon, MoreVert as MoreVertIcon, FormatQuote as FormatQuoteIcon } from '@material-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SentimentData(props) {\n  const greenData = [{\n    x: 'Positive',\n    y: 10\n  }, {\n    x: 'Negative',\n    y: 5\n  }, {\n    x: 'Netral',\n    y: 15\n  }];\n  const blueData = [{\n    x: 'Positive',\n    y: 12\n  }, {\n    x: 'Negative',\n    y: 2\n  }, {\n    x: 'Neutral',\n    y: 11\n  }];\n  const labelDataGreen = greenData.map((d, idx) => ({\n    x: d.x,\n    y: 0\n  }));\n  const labelDataBlue = blueData.map((d, idx) => ({\n    x: d.x,\n    y: -10\n  }));\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        borderTop: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        color: 'blue',\n        avatar: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"div\",\n          style: {\n            color: '#12939A'\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormatQuoteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), \" Sentiment Data\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this),\n        action: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"settings\",\n          children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(FlexibleWidthXYPlot, {\n          margin: {\n            bottom: 70\n          },\n          xType: \"ordinal\",\n          height: 300,\n          width: 300,\n          xDistance: 100,\n          stackBy: \"y\",\n          children: [/*#__PURE__*/_jsxDEV(VerticalGridLines, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(HorizontalGridLines, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            tickLabelAngle: 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(VerticalBarSeries, {\n            className: \"vertical-bar-series-example\",\n            data: greenData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(VerticalBarSeries, {\n            data: blueData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_c = SentimentData;\n\nvar _c;\n\n$RefreshReg$(_c, \"SentimentData\");","map":{"version":3,"sources":["/Users/nanang/neo4J/tuas/web-react/src/components/sna/SentimentDataAnalytic.js"],"names":["React","XYPlot","XAxis","YAxis","HorizontalGridLines","LineSeries","makeWidthFlexible","FlexibleWidthXYPlot","DiscreteColorLegend","VerticalGridLines","VerticalBarSeries","Title","Avatar","Typography","Card","CardContent","CardHeader","IconButton","ChevronLeft","ChevronLeftIcon","Menu","MenuIcon","Dashboard","DashboardIcon","Assignment","AssignmentIcon","Twitter","TwitterIcon","MoreVert","MoreVertIcon","FormatQuote","FormatQuoteIcon","SentimentData","props","greenData","x","y","blueData","labelDataGreen","map","d","idx","labelDataBlue","borderTop","color","bottom"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {\n  XYPlot,\n  XAxis,\n  YAxis,\n  HorizontalGridLines,\n  LineSeries,\n  makeWidthFlexible,\n  FlexibleWidthXYPlot,\n  DiscreteColorLegend,\n  VerticalGridLines,\n  VerticalBarSeries,\n} from 'react-vis'\n\nimport Title from '../Title'\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardHeader from '@material-ui/core/CardHeader'\n\nimport IconButton from '@material-ui/core/IconButton'\n\nimport {\n  ChevronLeft as ChevronLeftIcon,\n  Menu as MenuIcon,\n  Dashboard as DashboardIcon,\n  Assignment as AssignmentIcon,\n  Twitter as TwitterIcon,\n  MoreVert as MoreVertIcon,\n  FormatQuote as FormatQuoteIcon,\n} from '@material-ui/icons'\n\nexport default function SentimentData(props) {\n  const greenData = [\n    { x: 'Positive', y: 10 },\n    { x: 'Negative', y: 5 },\n    { x: 'Netral', y: 15 },\n  ]\n\n  const blueData = [\n    { x: 'Positive', y: 12 },\n    { x: 'Negative', y: 2 },\n    { x: 'Neutral', y: 11 },\n  ]\n\n  const labelDataGreen = greenData.map((d, idx) => ({\n    x: d.x,\n    y: 0,\n  }))\n\n  const labelDataBlue = blueData.map((d, idx) => ({\n    x: d.x,\n    y: -10,\n  }))\n\n  return (\n    <React.Fragment>\n      <Card sx={{ borderTop: 1 }}>\n        <CardHeader\n          color={'blue'}\n          avatar={\n            <Typography\n              variant=\"h5\"\n              component=\"div\"\n              style={{ color: '#12939A' }}\n            >\n              <FormatQuoteIcon /> Sentiment Data\n            </Typography>\n          }\n          action={\n            <IconButton aria-label=\"settings\">\n              <MoreVertIcon />\n            </IconButton>\n          }\n        />\n\n        <CardContent>\n          <FlexibleWidthXYPlot\n            margin={{ bottom: 70 }}\n            xType=\"ordinal\"\n            height={300}\n            width={300}\n            xDistance={100}\n            stackBy=\"y\"\n          >\n            <VerticalGridLines />\n            <HorizontalGridLines />\n            <XAxis tickLabelAngle={0} />\n            <YAxis />\n            <VerticalBarSeries\n              className=\"vertical-bar-series-example\"\n              data={greenData}\n            />\n            <VerticalBarSeries data={blueData} />\n          </FlexibleWidthXYPlot>\n        </CardContent>\n      </Card>\n    </React.Fragment>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}