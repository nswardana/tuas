{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/nanang/neo4J/tuas/web-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/nanang/neo4J/tuas/web-react/src/components/sna/tweet/ChartTweet.js\",\n    _templateObject,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { XYPlot, XAxis, YAxis, HorizontalGridLines, LineSeries, makeWidthFlexible, FlexibleWidthXYPlot, DiscreteColorLegend, VerticalGridLines, VerticalBarSeries } from 'react-vis';\nimport { FlexRow, FlexCol, Item } from '@mui-treasury/component-flex';\nimport RVStyles from 'react-vis-styles';\nconst FlexibleXYPlot = makeWidthFlexible(XYPlot);\n_c = FlexibleXYPlot;\nimport Typography from '@material-ui/core/Typography';\nimport { ChevronLeft as ChevronLeftIcon, Menu as MenuIcon, Dashboard as DashboardIcon, Assignment as AssignmentIcon, Twitter as TwitterIcon, MoreVert as MoreVertIcon, FormatQuote as FormatQuoteIcon, BarChartRounded as BarChartRoundedIcon } from '@material-ui/icons';\nimport { useQuery, gql } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_TWEET_CHART = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  {\\n    getSentimentByProjectId(project_id: 26) {\\n      sentiment_summary\\n      jumlah\\n    }\\n  }\\n\"])));\nexport default function ChartBar(props) {\n  _s();\n\n  var project_id = 26;\n\n  const _useQuery = useQuery(GET_TWEET_CHART, {\n    variables: {\n      project_id: project_id\n    }\n  }),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 21\n  }, this);\n  if (loading) return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 23\n  }, this);\n  console.log('ChartTweet');\n  console.log(data);\n  var dataChart = [];\n  dataChart.push({\n    x: 'NULL',\n    y: data.getSentimentByProjectId[0].jumlah,\n    color: '#cd3b54'\n  });\n  dataChart.push({\n    x: 'NEUTRAL',\n    y: data.getSentimentByProjectId[1].jumlah,\n    color: '#59b953'\n  });\n  dataChart.push({\n    x: 'NEGATIVE',\n    y: data.getSentimentByProjectId[2].jumlah,\n    color: '#ba4fb9'\n  });\n  return /*#__PURE__*/_jsxDEV(FlexCol, {\n    borderRadius: 2,\n    sx: {\n      bgcolor: 'rgb(244, 247, 250)',\n      boxShadow: '0 8px 16px 0 #BDC9D7'\n    },\n    style: {\n      background: '#ECEFF1'\n    },\n    children: /*#__PURE__*/_jsxDEV(FlexRow, {\n      alignItems: \"baseline\",\n      p: 2,\n      sx: {\n        bgcolor: '#fff'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Item, {\n        grow: true,\n        mr: 1,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \" Tweet Sentiment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FlexibleWidthXYPlot, {\n        xType: \"ordinal\",\n        height: 300,\n        children: [/*#__PURE__*/_jsxDEV(VerticalGridLines, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HorizontalGridLines, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          style: {\n            text: {\n              stroke: 'none',\n              top: 20,\n              fontSize: 10,\n              fontWeight: 100,\n              transform: 'translate(10px, 0)'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(VerticalBarSeries, {\n          color: \"#FF7F00\",\n          data: dataChart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChartBar, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c2 = ChartBar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FlexibleXYPlot\");\n$RefreshReg$(_c2, \"ChartBar\");","map":{"version":3,"sources":["/Users/nanang/neo4J/tuas/web-react/src/components/sna/tweet/ChartTweet.js"],"names":["React","XYPlot","XAxis","YAxis","HorizontalGridLines","LineSeries","makeWidthFlexible","FlexibleWidthXYPlot","DiscreteColorLegend","VerticalGridLines","VerticalBarSeries","FlexRow","FlexCol","Item","RVStyles","FlexibleXYPlot","Typography","ChevronLeft","ChevronLeftIcon","Menu","MenuIcon","Dashboard","DashboardIcon","Assignment","AssignmentIcon","Twitter","TwitterIcon","MoreVert","MoreVertIcon","FormatQuote","FormatQuoteIcon","BarChartRounded","BarChartRoundedIcon","useQuery","gql","CircularProgress","GET_TWEET_CHART","ChartBar","props","project_id","variables","loading","error","data","console","log","dataChart","push","x","y","getSentimentByProjectId","jumlah","color","bgcolor","boxShadow","background","text","stroke","top","fontSize","fontWeight","transform"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {\n  XYPlot,\n  XAxis,\n  YAxis,\n  HorizontalGridLines,\n  LineSeries,\n  makeWidthFlexible,\n  FlexibleWidthXYPlot,\n  DiscreteColorLegend,\n  VerticalGridLines,\n  VerticalBarSeries,\n} from 'react-vis'\n\nimport { FlexRow, FlexCol, Item } from '@mui-treasury/component-flex'\n\nimport RVStyles from 'react-vis-styles'\nconst FlexibleXYPlot = makeWidthFlexible(XYPlot)\n\nimport Typography from '@material-ui/core/Typography'\nimport {\n  ChevronLeft as ChevronLeftIcon,\n  Menu as MenuIcon,\n  Dashboard as DashboardIcon,\n  Assignment as AssignmentIcon,\n  Twitter as TwitterIcon,\n  MoreVert as MoreVertIcon,\n  FormatQuote as FormatQuoteIcon,\n  BarChartRounded as BarChartRoundedIcon,\n} from '@material-ui/icons'\n\nimport { useQuery, gql } from '@apollo/client'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nconst GET_TWEET_CHART = gql`\n  {\n    getSentimentByProjectId(project_id: 26) {\n      sentiment_summary\n      jumlah\n    }\n  }\n`\n\nexport default function ChartBar(props) {\n  var project_id = 26\n  const { loading, error, data } = useQuery(GET_TWEET_CHART, {\n    variables: { project_id: project_id },\n  })\n\n  if (error) return <p>Error</p>\n  if (loading) return <CircularProgress />\n\n  console.log('ChartTweet')\n  console.log(data)\n\n  var dataChart = []\n  dataChart.push({\n    x: 'NULL',\n    y: data.getSentimentByProjectId[0].jumlah,\n    color: '#cd3b54',\n  })\n  dataChart.push({\n    x: 'NEUTRAL',\n    y: data.getSentimentByProjectId[1].jumlah,\n    color: '#59b953',\n  })\n  dataChart.push({\n    x: 'NEGATIVE',\n    y: data.getSentimentByProjectId[2].jumlah,\n    color: '#ba4fb9',\n  })\n\n  return (\n    <FlexCol\n      borderRadius={2}\n      sx={{\n        bgcolor: 'rgb(244, 247, 250)',\n        boxShadow: '0 8px 16px 0 #BDC9D7',\n      }}\n      style={{ background: '#ECEFF1' }}\n    >\n      <FlexRow\n        alignItems=\"baseline\"\n        p={2}\n        sx={{\n          bgcolor: '#fff',\n        }}\n      >\n        <Item grow mr={1}>\n          <Typography variant=\"h6\">\n            <b> Tweet Sentiment</b>\n          </Typography>\n        </Item>\n        <FlexibleWidthXYPlot xType=\"ordinal\" height={300}>\n          <VerticalGridLines />\n          <HorizontalGridLines />\n          <XAxis\n            style={{\n              text: {\n                stroke: 'none',\n                top: 20,\n                fontSize: 10,\n                fontWeight: 100,\n                transform: 'translate(10px, 0)',\n              },\n            }}\n          />\n          <YAxis />\n          <VerticalBarSeries color=\"#FF7F00\" data={dataChart} />\n        </FlexibleWidthXYPlot>\n      </FlexRow>\n    </FlexCol>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}