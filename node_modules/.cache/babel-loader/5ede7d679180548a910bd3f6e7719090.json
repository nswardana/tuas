{"ast":null,"code":"var _jsxFileName = \"/Users/nanang/neo4J/tuas/web-react/src/components/sna/HastagsNetwork.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Grid, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport IconButton from '@material-ui/core/IconButton';\nimport { ChevronLeft as ChevronLeftIcon, Menu as MenuIcon, Dashboard as DashboardIcon, Assignment as AssignmentIcon, Twitter as TwitterIcon, MoreVert as MoreVertIcon, People as PeopleIcon } from '@material-ui/icons';\nimport { Graph } from 'react-d3-graph';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Words() {\n  _s();\n\n  const theme = useTheme();\n  const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex'\n    },\n    paper: {\n      padding: theme.spacing(2),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column'\n    },\n    fixedHeight: {\n      height: 240\n    }\n  }));\n  const classes = useStyles(theme);\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight); // graph payload (with minimalist structure)\n\n  const data = {\n    nodes: [{\n      id: 'Hendrayanto'\n    }, {\n      id: 'Sally'\n    }, {\n      id: 'Alice'\n    }, {\n      id: 'Nanang'\n    }, {\n      id: 'Dhirar'\n    }, {\n      id: 'Darwis'\n    }, {\n      id: 'Zaini'\n    }, {\n      id: 'Izbiq'\n    }, {\n      id: 'Mantan SUZ'\n    }],\n    links: [{\n      source: 'Hendrayanto',\n      target: 'Sally'\n    }, {\n      source: 'Hendrayanto',\n      target: 'Alice'\n    }, {\n      source: 'Hendrayanto',\n      target: 'Mantan SUZ'\n    }, {\n      source: 'Nanang',\n      target: 'Mantan SUZ'\n    }, {\n      source: 'Dhirar',\n      target: 'Mantan SUZ'\n    }, {\n      source: 'Darwis',\n      target: 'Mantan SUZ'\n    }, {\n      source: 'Zaini',\n      target: 'Mantan SUZ'\n    }, {\n      source: 'Izbiq',\n      target: 'Mantan SUZ'\n    }]\n  }; // the graph configuration, just override the ones you need\n\n  const myConfig = {\n    nodeHighlightBehavior: true,\n    node: {\n      color: 'red',\n      size: 240,\n      highlightStrokeColor: 'blue'\n    },\n    link: {\n      highlightColor: 'lightblue'\n    },\n    linkHighlightBehavior: true,\n    maxZoom: 12,\n    minZoom: 0.05,\n    panAndZoom: false,\n    staticGraph: false,\n    collapsible: true,\n    focusZoom: 4\n  };\n\n  const onClickNode = function onClickNode(nodeId) {\n    window.alert(\"Clicked node \".concat(nodeId));\n  };\n\n  const onClickLink = function onClickLink(source, target) {\n    window.alert(\"Clicked link between \".concat(source, \" and \").concat(target));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            avatar: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              component: \"div\",\n              style: {\n                color: '#12939A'\n              },\n              children: \"# Hastags Network\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this),\n            action: /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"settings\",\n              children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Graph, {\n            id: \"graph-id\" // id is mandatory\n            ,\n            data: data,\n            config: myConfig,\n            onClickNode: onClickNode,\n            onClickLink: onClickLink\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), \";\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Words, \"H43PDnWPsspE0TkwGa5lPfJs7XQ=\", true, function () {\n  return [useTheme];\n});\n\n_c = Words;\n\nvar _c;\n\n$RefreshReg$(_c, \"Words\");","map":{"version":3,"sources":["/Users/nanang/neo4J/tuas/web-react/src/components/sna/HastagsNetwork.js"],"names":["React","useTheme","Grid","Paper","makeStyles","clsx","Typography","Card","CardContent","CardHeader","IconButton","ChevronLeft","ChevronLeftIcon","Menu","MenuIcon","Dashboard","DashboardIcon","Assignment","AssignmentIcon","Twitter","TwitterIcon","MoreVert","MoreVertIcon","People","PeopleIcon","Graph","Words","theme","useStyles","root","display","paper","padding","spacing","overflow","flexDirection","fixedHeight","height","classes","fixedHeightPaper","data","nodes","id","links","source","target","myConfig","nodeHighlightBehavior","node","color","size","highlightStrokeColor","link","highlightColor","linkHighlightBehavior","maxZoom","minZoom","panAndZoom","staticGraph","collapsible","focusZoom","onClickNode","nodeId","window","alert","onClickLink"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useTheme } from '@material-ui/core/styles'\nimport { Grid, Paper } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\n\nimport Typography from '@material-ui/core/Typography'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport IconButton from '@material-ui/core/IconButton'\n\nimport {\n  ChevronLeft as ChevronLeftIcon,\n  Menu as MenuIcon,\n  Dashboard as DashboardIcon,\n  Assignment as AssignmentIcon,\n  Twitter as TwitterIcon,\n  MoreVert as MoreVertIcon,\n  People as PeopleIcon,\n} from '@material-ui/icons'\n\nimport { Graph } from 'react-d3-graph'\n\nexport default function Words() {\n  const theme = useTheme()\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n    },\n    paper: {\n      padding: theme.spacing(2),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    fixedHeight: {\n      height: 240,\n    },\n  }))\n\n  const classes = useStyles(theme)\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight)\n\n  // graph payload (with minimalist structure)\n  const data = {\n    nodes: [\n      { id: 'Hendrayanto' },\n      { id: 'Sally' },\n      { id: 'Alice' },\n\n      { id: 'Nanang' },\n      { id: 'Dhirar' },\n      { id: 'Darwis' },\n      { id: 'Zaini' },\n      { id: 'Izbiq' },\n\n      { id: 'Mantan SUZ' },\n    ],\n    links: [\n      { source: 'Hendrayanto', target: 'Sally' },\n      { source: 'Hendrayanto', target: 'Alice' },\n\n      { source: 'Hendrayanto', target: 'Mantan SUZ' },\n      { source: 'Nanang', target: 'Mantan SUZ' },\n      { source: 'Dhirar', target: 'Mantan SUZ' },\n      { source: 'Darwis', target: 'Mantan SUZ' },\n      { source: 'Zaini', target: 'Mantan SUZ' },\n      { source: 'Izbiq', target: 'Mantan SUZ' },\n    ],\n  }\n\n  // the graph configuration, just override the ones you need\n  const myConfig = {\n    nodeHighlightBehavior: true,\n    node: {\n      color: 'red',\n      size: 240,\n      highlightStrokeColor: 'blue',\n    },\n    link: {\n      highlightColor: 'lightblue',\n    },\n    linkHighlightBehavior: true,\n    maxZoom: 12,\n    minZoom: 0.05,\n    panAndZoom: false,\n    staticGraph: false,\n    collapsible: true,\n    focusZoom: 4,\n  }\n\n  const onClickNode = function (nodeId) {\n    window.alert(`Clicked node ${nodeId}`)\n  }\n\n  const onClickLink = function (source, target) {\n    window.alert(`Clicked link between ${source} and ${target}`)\n  }\n\n  return (\n    <React.Fragment>\n      {/* TwitterUser */}\n      <Grid container spacing={4}>\n        <Grid item xs={12}>\n          <Card>\n            <CardHeader\n              avatar={\n                <Typography\n                  variant=\"h5\"\n                  component=\"div\"\n                  style={{ color: '#12939A' }}\n                >\n                  # Hastags Network\n                </Typography>\n              }\n              action={\n                <IconButton aria-label=\"settings\">\n                  <MoreVertIcon />\n                </IconButton>\n              }\n            />\n            <Graph\n              id=\"graph-id\" // id is mandatory\n              data={data}\n              config={myConfig}\n              onClickNode={onClickNode}\n              onClickLink={onClickLink}\n            />\n            ;\n          </Card>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}