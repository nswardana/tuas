{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/nanang/neo4J/tuas/web-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/nanang/neo4J/tuas/web-react/src/components/sna/user/UserCommunityNetwork.js\",\n    _templateObject,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Grid } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Twitter as TwitterIcon, MoreVert as MoreVertIcon, People as PeopleIcon } from '@material-ui/icons';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Graph } from 'react-d3-graph';\nimport { useQuery, useMutation, gql } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar GET_USER_TWEET_REL = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  query getTrack($community_id: Int) {\\n    getUserAndTweetByCommunityId(community_id: $community_id) {\\n      node_id\\n      screen_name\\n      name\\n      username\\n      tweet_id\\n      tweet\\n      type_rel\\n      node_start\\n      node_end\\n      community_id\\n      profile_image_url\\n    }\\n  }\\n\"])));\nexport default function UserCommunityNetwork(ObjComId) {\n  _s();\n\n  var commId = parseInt(ObjComId.community_id);\n  console.log('community_id ' + commId);\n  var nodeQuery = useQuery(GET_USER_TWEET_REL, {\n    variables: {\n      community_id: commId\n    }\n  });\n  var error = nodeQuery.error;\n  var loading = nodeQuery.loading;\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 21\n  }, this);\n  if (loading) return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 23\n  }, this); // graph payload (with minimalist structure)\n\n  var nodes = [];\n  var uniqueNodes = [];\n  var links = [];\n  console.log('nodeQuery');\n  console.log(nodeQuery.data.getUserAndTweetByCommunityId);\n\n  var generateKey = function generateKey(pre) {\n    return \"\".concat(pre, \"_\").concat(new Date().getTime());\n  };\n\n  nodeQuery.data.getUserAndTweetByCommunityId.map(function (_ref) {\n    var community_id = _ref.community_id,\n        user_id = _ref.user_id,\n        screen_name = _ref.screen_name,\n        name = _ref.name,\n        profile_image_url = _ref.profile_image_url,\n        tweet_id = _ref.tweet_id,\n        node_start = _ref.node_start,\n        node_end = _ref.node_end,\n        tweet = _ref.tweet,\n        type_rel = _ref.type_rel,\n        index = _ref.index;\n    var imgIcon = 'https://toppng.com/public/uploads/thumbnail/business-loans-person-icon-png-red-11563187772c5f6v57lng.png';\n    if (profile_image_url !== null) imgIcon = profile_image_url;\n\n    if (!nodes.some(function (_ref2) {\n      var id = _ref2.id;\n      return id == node_start;\n    })) {\n      nodes.push({\n        id: node_start,\n        color: '#2D82B5',\n        strokeColor: '#015C92',\n        svg: imgIcon,\n        label: screen_name,\n        size: 400,\n        index: index\n      });\n    }\n\n    if (!nodes.some(function (_ref3) {\n      var id = _ref3.id;\n      return id == node_end;\n    })) {\n      nodes.push({\n        id: node_end,\n        color: '#FE7A15',\n        strokeColor: '#205072',\n        size: 200,\n        label: tweet,\n        index: index,\n        svg: 'https://w7.pngwing.com/pngs/239/740/png-transparent-twitter-logo-icon-twitter-file-logo-social-media-news-thumbnail.png'\n      });\n    }\n\n    if (!links.some(function (_ref4) {\n      var source = _ref4.source,\n          target = _ref4.target;\n      return source == node_start && target == node_end;\n    })) {\n      var type_curve = 'STRAIGHT';\n      if (type_rel === 'POST') type_curve = 'CURVE_SMOOTH';\n      links.push({\n        key: generateKey(node_start),\n        source: node_start,\n        target: node_end,\n        label: type_rel,\n        type: 'CURVE_SMOOTH'\n      });\n    }\n  });\n  /*\n  const uniqueIds = []\n  uniqueNodes = nodes.filter((node) => {\n    const isDuplicate = uniqueIds.includes(node.id)\n    if (!isDuplicate) {\n      uniqueIds.push(node.id)\n      return true\n    }\n    return false\n  })\n  */\n\n  var data = {\n    nodes: nodes,\n    links: links\n  };\n  console.log('data');\n  console.log(data); // the graph configuration, just override the ones you need\n\n  var myConfig = {\n    d3: {\n      alphaTarget: 0.05,\n      gravity: -230,\n      linkLength: 100,\n      linkStrength: 1,\n      disableLinkForce: false\n    },\n    nodeHighlightBehavior: true,\n    node: {\n      highlightStrokeColor: '#FE7A15',\n      labelProperty: 'label',\n      fontSize: 10,\n      fontWeight: 'bold',\n      labelPosition: 'left'\n    },\n    link: {\n      highlightColor: '#FE7A15'\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            avatar: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              component: \"div\",\n              style: {\n                color: '#12939A'\n              },\n              children: \"# Community Network\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this),\n            action: /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"settings\",\n              children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Graph, {\n            id: \"graph-id\" // id is mandatory\n            ,\n            data: data,\n            config: myConfig\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), \";\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserCommunityNetwork, \"tolVmCrRuFers46Wn78c81ywtOE=\", false, function () {\n  return [useQuery];\n});\n\n_c = UserCommunityNetwork;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserCommunityNetwork\");","map":{"version":3,"sources":["/Users/nanang/neo4J/tuas/web-react/src/components/sna/user/UserCommunityNetwork.js"],"names":["React","Grid","Typography","Card","CardHeader","IconButton","Twitter","TwitterIcon","MoreVert","MoreVertIcon","People","PeopleIcon","CircularProgress","Graph","useQuery","useMutation","gql","GET_USER_TWEET_REL","UserCommunityNetwork","ObjComId","commId","parseInt","community_id","console","log","nodeQuery","variables","error","loading","nodes","uniqueNodes","links","data","getUserAndTweetByCommunityId","generateKey","pre","Date","getTime","map","user_id","screen_name","name","profile_image_url","tweet_id","node_start","node_end","tweet","type_rel","index","imgIcon","some","id","push","color","strokeColor","svg","label","size","source","target","type_curve","key","type","myConfig","d3","alphaTarget","gravity","linkLength","linkStrength","disableLinkForce","nodeHighlightBehavior","node","highlightStrokeColor","labelProperty","fontSize","fontWeight","labelPosition","link","highlightColor"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Grid } from '@material-ui/core'\nimport Typography from '@material-ui/core/Typography'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport IconButton from '@material-ui/core/IconButton'\n\nimport {\n  Twitter as TwitterIcon,\n  MoreVert as MoreVertIcon,\n  People as PeopleIcon,\n} from '@material-ui/icons'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport { Graph } from 'react-d3-graph'\nimport { useQuery, useMutation, gql } from '@apollo/client'\n\nconst GET_USER_TWEET_REL = gql`\n  query getTrack($community_id: Int) {\n    getUserAndTweetByCommunityId(community_id: $community_id) {\n      node_id\n      screen_name\n      name\n      username\n      tweet_id\n      tweet\n      type_rel\n      node_start\n      node_end\n      community_id\n      profile_image_url\n    }\n  }\n`\n\nexport default function UserCommunityNetwork(ObjComId) {\n  var commId = parseInt(ObjComId.community_id)\n  console.log('community_id ' + commId)\n\n  const nodeQuery = useQuery(GET_USER_TWEET_REL, {\n    variables: { community_id: commId },\n  })\n\n  const error = nodeQuery.error\n  const loading = nodeQuery.loading\n\n  if (error) return <p>Error</p>\n  if (loading) return <CircularProgress />\n\n  // graph payload (with minimalist structure)\n\n  var nodes = []\n  var uniqueNodes = []\n  var links = []\n\n  console.log('nodeQuery')\n  console.log(nodeQuery.data.getUserAndTweetByCommunityId)\n\n  const generateKey = (pre) => {\n    return `${pre}_${new Date().getTime()}`\n  }\n\n  nodeQuery.data.getUserAndTweetByCommunityId.map(\n    ({\n      community_id,\n      user_id,\n      screen_name,\n      name,\n      profile_image_url,\n      tweet_id,\n      node_start,\n      node_end,\n      tweet,\n      type_rel,\n      index,\n    }) => {\n      var imgIcon =\n        'https://toppng.com/public/uploads/thumbnail/business-loans-person-icon-png-red-11563187772c5f6v57lng.png'\n      if (profile_image_url !== null) imgIcon = profile_image_url\n\n      if (!nodes.some(({ id }) => id == node_start)) {\n        nodes.push({\n          id: node_start,\n          color: '#2D82B5',\n          strokeColor: '#015C92',\n          svg: imgIcon,\n          label: screen_name,\n          size: 400,\n          index: index,\n        })\n      }\n      if (!nodes.some(({ id }) => id == node_end)) {\n        nodes.push({\n          id: node_end,\n          color: '#FE7A15',\n          strokeColor: '#205072',\n          size: 200,\n          label: tweet,\n          index: index,\n          svg:\n            'https://w7.pngwing.com/pngs/239/740/png-transparent-twitter-logo-icon-twitter-file-logo-social-media-news-thumbnail.png',\n        })\n      }\n\n      if (\n        !links.some(\n          ({ source, target }) => source == node_start && target == node_end\n        )\n      ) {\n        var type_curve = 'STRAIGHT'\n        if (type_rel === 'POST') type_curve = 'CURVE_SMOOTH'\n\n        links.push({\n          key: generateKey(node_start),\n          source: node_start,\n          target: node_end,\n          label: type_rel,\n          type: 'CURVE_SMOOTH',\n        })\n      }\n    }\n  )\n\n  /*\n  const uniqueIds = []\n  uniqueNodes = nodes.filter((node) => {\n    const isDuplicate = uniqueIds.includes(node.id)\n    if (!isDuplicate) {\n      uniqueIds.push(node.id)\n      return true\n    }\n    return false\n  })\n */\n  const data = {\n    nodes: nodes,\n    links: links,\n  }\n  console.log('data')\n  console.log(data)\n\n  // the graph configuration, just override the ones you need\n  const myConfig = {\n    d3: {\n      alphaTarget: 0.05,\n      gravity: -230,\n      linkLength: 100,\n      linkStrength: 1,\n      disableLinkForce: false,\n    },\n    nodeHighlightBehavior: true,\n    node: {\n      highlightStrokeColor: '#FE7A15',\n      labelProperty: 'label',\n      fontSize: 10,\n      fontWeight: 'bold',\n      labelPosition: 'left',\n    },\n    link: {\n      highlightColor: '#FE7A15',\n    },\n  }\n\n  return (\n    <React.Fragment>\n      {/* TwitterUser */}\n      <Grid container spacing={4}>\n        <Grid item xs={12}>\n          <Card>\n            <CardHeader\n              avatar={\n                <Typography\n                  variant=\"h5\"\n                  component=\"div\"\n                  style={{ color: '#12939A' }}\n                >\n                  # Community Network\n                </Typography>\n              }\n              action={\n                <IconButton aria-label=\"settings\">\n                  <MoreVertIcon />\n                </IconButton>\n              }\n            />\n            <Graph\n              id=\"graph-id\" // id is mandatory\n              data={data}\n              config={myConfig}\n            />\n            ;\n          </Card>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}