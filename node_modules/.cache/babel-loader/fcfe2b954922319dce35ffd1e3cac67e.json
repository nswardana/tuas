{"ast":null,"code":"import _objectSpread from \"/Users/nanang/neo4J/tuas/web-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/nanang/neo4J/tuas/web-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/nanang/neo4J/tuas/web-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/nanang/neo4J/tuas/web-react/src/components/ProjectFormCreate.js\",\n    _templateObject,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Slider from '@material-ui/core/Slider';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport IconButton from '@material-ui/core/IconButton';\nimport Title from './Title';\nimport Typography from '@material-ui/core/Typography';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { ChevronLeft as ChevronLeftIcon, Menu as MenuIcon, Dashboard as DashboardIcon, Assignment as AssignmentIcon, Twitter as TwitterIcon, MoreVert as MoreVertIcon, FormatQuote as FormatQuoteIcon, TableChart as TableChartIcon, SearchOutlined as ManageSearchIcon, DriveEtaSharp } from '@material-ui/icons';\nconst defaultValues = {\n  name: '',\n  age: 0,\n  gender: '',\n  os: '',\n  favoriteNumber: 0\n};\nconst CREATE_PROJECT = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  mutation (\\n    $project_id: Long\\n    $title: String\\n    $keywords: String\\n    $socialmedia: String\\n    $status: String\\n    $fromDate: String\\n    $toDate: String\\n    $project_type: String\\n  ) {\\n    createProjects(\\n      input: {\\n        project_id: $project_id\\n        title: $title\\n        keywords: $keywords\\n        socialmedia: $socialmedia\\n        status: $status\\n        fromDate: $fromDate\\n        toDate: $toDate\\n        project_type: $project_type\\n      }\\n    ) {\\n      projects {\\n        project_id\\n        title\\n        keywords\\n        status\\n      }\\n    }\\n  }\\n\"])));\nimport { useQuery, useMutation, gql } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProjectFormCreate() {\n  _s();\n\n  const _useState = useState(defaultValues),\n        _useState2 = _slicedToArray(_useState, 2),\n        formValues = _useState2[0],\n        setFormValues = _useState2[1];\n\n  const history = useHistory();\n\n  const handleInputChange = e => {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n    setFormValues(_objectSpread(_objectSpread({}, formValues), {}, {\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(formValues);\n  };\n\n  function getCurrentDate(separator = '') {\n    let newDate = new Date();\n    let date = newDate.getDate();\n    let month = newDate.getMonth() + 1;\n    let year = newDate.getFullYear();\n    return \"\".concat(year).concat(separator).concat(month < 10 ? \"0\".concat(month) : \"\".concat(month)).concat(separator).concat(date);\n  }\n\n  const _React$useState = React.useState(''),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        title = _React$useState2[0],\n        SetProjectName = _React$useState2[1];\n\n  const _React$useState3 = React.useState(''),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        keywords = _React$useState4[0],\n        SetKeywords = _React$useState4[1];\n\n  const _React$useState5 = React.useState(getCurrentDate('-')),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        fromDate = _React$useState6[0],\n        SetFromDate = _React$useState6[1];\n\n  const _React$useState7 = React.useState(getCurrentDate('-')),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        toDate = _React$useState8[0],\n        SetToDate = _React$useState8[1];\n\n  const _React$useState9 = React.useState('REQUEST'),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        project_type = _React$useState10[0],\n        SetProjectType = _React$useState10[1];\n\n  const socialmedia = 'Twitter'; // sekarang bisanyanya twitter dahulu\n\n  const status = 'ON GOING'; //status di set ON GOING\n\n  const _useMutation = useMutation(CREATE_PROJECT, {\n    onCompleted: data => {\n      console.log('Data from mutation', data); // jika berhasil crawling data di twitter\n\n      if (project_type == 'REQUEST') history.push('/project');else history.push('/projectautomatic');\n    },\n    onError: errorCreateProject => console.error('Error creating a post', errorCreateProject)\n  }),\n        _useMutation2 = _slicedToArray(_useMutation, 2),\n        createPost = _useMutation2[0],\n        _useMutation2$ = _useMutation2[1],\n        loading = _useMutation2$.loading,\n        errorCreateProject = _useMutation2$.errorCreateProject;\n\n  function handleCreatePost(event) {\n    event.preventDefault();\n    let IdFromDate = new Date().getTime();\n    const project_id = IdFromDate.toString().substring(0, 12);\n    createPost({\n      variables: {\n        project_id,\n        title,\n        keywords,\n        socialmedia,\n        status,\n        fromDate,\n        toDate,\n        project_type\n      }\n    });\n  }\n\n  if (loading) return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCreatePost,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          avatar: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            component: \"div\",\n            style: {\n              color: '#12939A'\n            },\n            children: [/*#__PURE__*/_jsxDEV(ManageSearchIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this), \" Create Social Media Analytic\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this),\n          action: /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"settings\",\n            children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 8,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"name-input\",\n                name: \"projectname\",\n                label: \"Project Name\",\n                type: \"text\",\n                variant: \"outlined\",\n                defaultValue: \" \",\n                style: {\n                  width: '100%'\n                },\n                onChange: e => SetProjectName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 8,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"name-input\",\n                name: \"keywords\",\n                label: \"Keywords\",\n                type: \"text\",\n                variant: \"outlined\",\n                defaultValue: \" \",\n                style: {\n                  width: '100%'\n                },\n                onChange: e => SetKeywords(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"date\",\n                name: \"fromDate\",\n                label: \"From Date\",\n                type: \"Date\",\n                value: fromDate,\n                variant: \"outlined\",\n                sx: {\n                  width: 220\n                },\n                style: {\n                  width: '100%'\n                },\n                InputLabelProps: {\n                  shrink: true\n                },\n                onChange: e => SetFromDate(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"date\",\n                label: \"To Date\",\n                name: \"toDate\",\n                type: \"Date\",\n                value: toDate,\n                variant: \"outlined\",\n                style: {\n                  width: '100%'\n                },\n                sx: {\n                  width: 220\n                },\n                InputLabelProps: {\n                  shrink: true\n                },\n                onChange: e => SetToDate(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                sx: {\n                  m: 3\n                },\n                component: \"fieldset\",\n                variant: \"standard\",\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  component: \"legend\",\n                  children: \"Media Social\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    control: /*#__PURE__*/_jsxDEV(Checkbox, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 249,\n                      columnNumber: 32\n                    }, this),\n                    label: \"Twitter\",\n                    checked: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    control: /*#__PURE__*/_jsxDEV(Checkbox, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 32\n                    }, this),\n                    label: \"Facebook\",\n                    disabled: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    control: /*#__PURE__*/_jsxDEV(Checkbox, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 259,\n                      columnNumber: 32\n                    }, this),\n                    label: \"Instagram\",\n                    disabled: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"demo-simple-select-label\",\n                  children: \"Mode\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"demo-simple-select-label\",\n                  id: \"demo-simple-select\",\n                  value: project_type,\n                  name: \"project_type\",\n                  label: \"Mode\",\n                  onChange: e => SetProjectType(e.target.value),\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: 'AUTOMATIC',\n                    children: \"AUTOMATIC\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: 'REQUEST',\n                    children: \"REQUEST\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              size: \"large\",\n              color: \"secondary\",\n              style: {\n                color: 'success',\n                size: 'large',\n                marginTop: 10\n              },\n              startIcon: /*#__PURE__*/_jsxDEV(ManageSearchIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 28\n              }, this),\n              children: \"CREATE PROJECT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProjectFormCreate, \"Wv7ebp6jqLeUwAoM8UXzk26Owp0=\", false, function () {\n  return [useHistory, useMutation];\n});\n\n_c = ProjectFormCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectFormCreate\");","map":{"version":3,"sources":["/Users/nanang/neo4J/tuas/web-react/src/components/ProjectFormCreate.js"],"names":["React","useState","Table","TableBody","TableCell","TableHead","Grid","TextField","FormControlLabel","FormControl","RadioGroup","Radio","Select","MenuItem","Slider","Button","CircularProgress","InputLabel","FormLabel","FormGroup","FormHelperText","Checkbox","Card","CardContent","CardHeader","IconButton","Title","Typography","useHistory","useLocation","ChevronLeft","ChevronLeftIcon","Menu","MenuIcon","Dashboard","DashboardIcon","Assignment","AssignmentIcon","Twitter","TwitterIcon","MoreVert","MoreVertIcon","FormatQuote","FormatQuoteIcon","TableChart","TableChartIcon","SearchOutlined","ManageSearchIcon","DriveEtaSharp","defaultValues","name","age","gender","os","favoriteNumber","CREATE_PROJECT","gql","useQuery","useMutation","ProjectFormCreate","formValues","setFormValues","history","handleInputChange","e","target","value","handleSubmit","event","preventDefault","console","log","getCurrentDate","separator","newDate","Date","date","getDate","month","getMonth","year","getFullYear","title","SetProjectName","keywords","SetKeywords","fromDate","SetFromDate","toDate","SetToDate","project_type","SetProjectType","socialmedia","status","onCompleted","data","push","onError","errorCreateProject","error","createPost","loading","handleCreatePost","IdFromDate","getTime","project_id","toString","substring","variables","color","width","shrink","m","size","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\n\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport Radio from '@material-ui/core/Radio'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Slider from '@material-ui/core/Slider'\nimport Button from '@material-ui/core/Button'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport InputLabel from '@material-ui/core/InputLabel'\n\nimport FormLabel from '@material-ui/core/FormLabel'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport Checkbox from '@material-ui/core/Checkbox'\n\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardHeader from '@material-ui/core/CardHeader'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport Title from './Title'\n\nimport Typography from '@material-ui/core/Typography'\nimport { useHistory, useLocation } from 'react-router-dom'\n\nimport {\n  ChevronLeft as ChevronLeftIcon,\n  Menu as MenuIcon,\n  Dashboard as DashboardIcon,\n  Assignment as AssignmentIcon,\n  Twitter as TwitterIcon,\n  MoreVert as MoreVertIcon,\n  FormatQuote as FormatQuoteIcon,\n  TableChart as TableChartIcon,\n  SearchOutlined as ManageSearchIcon,\n  DriveEtaSharp,\n} from '@material-ui/icons'\n\nconst defaultValues = {\n  name: '',\n  age: 0,\n  gender: '',\n  os: '',\n  favoriteNumber: 0,\n}\nconst CREATE_PROJECT = gql`\n  mutation (\n    $project_id: Long\n    $title: String\n    $keywords: String\n    $socialmedia: String\n    $status: String\n    $fromDate: String\n    $toDate: String\n    $project_type: String\n  ) {\n    createProjects(\n      input: {\n        project_id: $project_id\n        title: $title\n        keywords: $keywords\n        socialmedia: $socialmedia\n        status: $status\n        fromDate: $fromDate\n        toDate: $toDate\n        project_type: $project_type\n      }\n    ) {\n      projects {\n        project_id\n        title\n        keywords\n        status\n      }\n    }\n  }\n`\n\nimport { useQuery, useMutation, gql } from '@apollo/client'\nexport default function ProjectFormCreate() {\n  const [formValues, setFormValues] = useState(defaultValues)\n  const history = useHistory()\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target\n    setFormValues({\n      ...formValues,\n      [name]: value,\n    })\n  }\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    console.log(formValues)\n  }\n\n  function getCurrentDate(separator = '') {\n    let newDate = new Date()\n    let date = newDate.getDate()\n    let month = newDate.getMonth() + 1\n    let year = newDate.getFullYear()\n\n    return `${year}${separator}${\n      month < 10 ? `0${month}` : `${month}`\n    }${separator}${date}`\n  }\n\n  const [title, SetProjectName] = React.useState('')\n  const [keywords, SetKeywords] = React.useState('')\n  const [fromDate, SetFromDate] = React.useState(getCurrentDate('-'))\n  const [toDate, SetToDate] = React.useState(getCurrentDate('-'))\n  const [project_type, SetProjectType] = React.useState('REQUEST')\n  const socialmedia = 'Twitter' // sekarang bisanyanya twitter dahulu\n  const status = 'ON GOING' //status di set ON GOING\n\n  const [createPost, { loading, errorCreateProject }] = useMutation(\n    CREATE_PROJECT,\n    {\n      onCompleted: (data) => {\n        console.log('Data from mutation', data)\n        // jika berhasil crawling data di twitter\n\n        if (project_type == 'REQUEST') history.push('/project')\n        else history.push('/projectautomatic')\n      },\n      onError: (errorCreateProject) =>\n        console.error('Error creating a post', errorCreateProject),\n    }\n  )\n\n  function handleCreatePost(event) {\n    event.preventDefault()\n    let IdFromDate = new Date().getTime()\n    const project_id = IdFromDate.toString().substring(0, 12)\n\n    createPost({\n      variables: {\n        project_id,\n        title,\n        keywords,\n        socialmedia,\n        status,\n        fromDate,\n        toDate,\n        project_type,\n      },\n    })\n  }\n\n  if (loading) return <CircularProgress />\n  return (\n    <React.Fragment>\n      <form onSubmit={handleCreatePost}>\n        <Card>\n          <CardHeader\n            avatar={\n              <Typography\n                variant=\"h5\"\n                component=\"div\"\n                style={{ color: '#12939A' }}\n              >\n                <ManageSearchIcon /> Create Social Media Analytic\n              </Typography>\n            }\n            action={\n              <IconButton aria-label=\"settings\">\n                <MoreVertIcon />\n              </IconButton>\n            }\n          />\n          <CardContent>\n            <Grid container spacing={2}>\n              <Grid item xs={8}>\n                <TextField\n                  id=\"name-input\"\n                  name=\"projectname\"\n                  label=\"Project Name\"\n                  type=\"text\"\n                  variant=\"outlined\"\n                  defaultValue=\" \"\n                  style={{ width: '100%' }}\n                  onChange={(e) => SetProjectName(e.target.value)}\n                />\n              </Grid>\n              <Grid item xs={4}></Grid>\n              <Grid item xs={8}>\n                <TextField\n                  id=\"name-input\"\n                  name=\"keywords\"\n                  label=\"Keywords\"\n                  type=\"text\"\n                  variant=\"outlined\"\n                  defaultValue=\" \"\n                  style={{ width: '100%' }}\n                  onChange={(e) => SetKeywords(e.target.value)}\n                />\n              </Grid>\n              <Grid item xs={4}></Grid>\n              <Grid item xs={4}>\n                <TextField\n                  id=\"date\"\n                  name=\"fromDate\"\n                  label=\"From Date\"\n                  type=\"Date\"\n                  value={fromDate}\n                  variant=\"outlined\"\n                  sx={{ width: 220 }}\n                  style={{ width: '100%' }}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  onChange={(e) => SetFromDate(e.target.value)}\n                />\n              </Grid>\n              <Grid item xs={4}>\n                <TextField\n                  id=\"date\"\n                  label=\"To Date\"\n                  name=\"toDate\"\n                  type=\"Date\"\n                  value={toDate}\n                  variant=\"outlined\"\n                  style={{ width: '100%' }}\n                  sx={{ width: 220 }}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  onChange={(e) => SetToDate(e.target.value)}\n                />\n              </Grid>\n              <Grid item xs={4}></Grid>\n              <Grid item xs={4}>\n                <FormControl\n                  sx={{ m: 3 }}\n                  component=\"fieldset\"\n                  variant=\"standard\"\n                >\n                  <FormLabel component=\"legend\">Media Social</FormLabel>\n                  <FormGroup>\n                    <FormControlLabel\n                      control={<Checkbox />}\n                      label=\"Twitter\"\n                      checked\n                    />\n                    <FormControlLabel\n                      control={<Checkbox />}\n                      label=\"Facebook\"\n                      disabled\n                    />\n                    <FormControlLabel\n                      control={<Checkbox />}\n                      label=\"Instagram\"\n                      disabled\n                    />\n                  </FormGroup>\n                </FormControl>\n              </Grid>\n              <Grid item xs={4}>\n                <FormControl fullWidth>\n                  <InputLabel id=\"demo-simple-select-label\">Mode</InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={project_type}\n                    name=\"project_type\"\n                    label=\"Mode\"\n                    onChange={(e) => SetProjectType(e.target.value)}\n                  >\n                    <MenuItem value={'AUTOMATIC'}>AUTOMATIC</MenuItem>\n                    <MenuItem value={'REQUEST'}>REQUEST</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n            </Grid>\n            <div>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                size=\"large\"\n                color=\"secondary\"\n                style={{ color: 'success', size: 'large', marginTop: 10 }}\n                startIcon={<ManageSearchIcon />}\n              >\n                CREATE PROJECT\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n      </form>\n    </React.Fragment>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}